/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export declare namespace Params {
  export type MaxValuesStruct = {
    maxMessages: BigNumberish;
    maxVoteOptions: BigNumberish;
  };

  export type MaxValuesStructOutput = [
    maxMessages: bigint,
    maxVoteOptions: bigint
  ] & { maxMessages: bigint; maxVoteOptions: bigint };

  export type TreeDepthsStruct = {
    intStateTreeDepth: BigNumberish;
    messageTreeSubDepth: BigNumberish;
    messageTreeDepth: BigNumberish;
    voteOptionTreeDepth: BigNumberish;
  };

  export type TreeDepthsStructOutput = [
    intStateTreeDepth: bigint,
    messageTreeSubDepth: bigint,
    messageTreeDepth: bigint,
    voteOptionTreeDepth: bigint
  ] & {
    intStateTreeDepth: bigint;
    messageTreeSubDepth: bigint;
    messageTreeDepth: bigint;
    voteOptionTreeDepth: bigint;
  };
}

export declare namespace DomainObjs {
  export type PubKeyStruct = { x: BigNumberish; y: BigNumberish };

  export type PubKeyStructOutput = [x: bigint, y: bigint] & {
    x: bigint;
    y: bigint;
  };
}

export declare namespace ClonableMACIFactory {
  export type MACI_SETTINGSStruct = {
    treeDepths: Params.TreeDepthsStruct;
    stateTreeDepth: BigNumberish;
    verifier: AddressLike;
    vkRegistry: AddressLike;
  };

  export type MACI_SETTINGSStructOutput = [
    treeDepths: Params.TreeDepthsStructOutput,
    stateTreeDepth: bigint,
    verifier: string,
    vkRegistry: string
  ] & {
    treeDepths: Params.TreeDepthsStructOutput;
    stateTreeDepth: bigint;
    verifier: string;
    vkRegistry: string;
  };
}

export interface ClonableMACIFactoryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "MESSAGE_DATA_LENGTH"
      | "createMACI"
      | "deployMessageProcessor"
      | "deployPoll"
      | "deployTally"
      | "getMaxVoteOptions"
      | "initialize"
      | "maciSettings"
      | "owner"
      | "renounceOwnership"
      | "setMaciSettings"
      | "transferOwnership"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "Initialized" | "OwnershipTransferred"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "MESSAGE_DATA_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createMACI",
    values: [AddressLike, AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deployMessageProcessor",
    values: [AddressLike, AddressLike, AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deployPoll",
    values: [
      BigNumberish,
      Params.MaxValuesStruct,
      Params.TreeDepthsStruct,
      DomainObjs.PubKeyStruct,
      AddressLike,
      AddressLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "deployTally",
    values: [
      AddressLike,
      AddressLike,
      AddressLike,
      AddressLike,
      AddressLike,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxVoteOptions",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike, AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "maciSettings",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setMaciSettings",
    values: [BigNumberish, ClonableMACIFactory.MACI_SETTINGSStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "MESSAGE_DATA_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "createMACI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deployMessageProcessor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deployPoll", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deployTally",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxVoteOptions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "maciSettings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaciSettings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface ClonableMACIFactory extends BaseContract {
  connect(runner?: ContractRunner | null): ClonableMACIFactory;
  waitForDeployment(): Promise<this>;

  interface: ClonableMACIFactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  MESSAGE_DATA_LENGTH: TypedContractMethod<[], [bigint], "view">;

  createMACI: TypedContractMethod<
    [
      _signUpGatekeeper: AddressLike,
      _initialVoiceCreditProxy: AddressLike,
      _coordinator: AddressLike,
      _maciId: BigNumberish
    ],
    [string],
    "nonpayable"
  >;

  deployMessageProcessor: TypedContractMethod<
    [
      _verifier: AddressLike,
      _vkRegistry: AddressLike,
      _poll: AddressLike,
      _owner: AddressLike,
      mode: BigNumberish
    ],
    [string],
    "nonpayable"
  >;

  deployPoll: TypedContractMethod<
    [
      _duration: BigNumberish,
      _maxValues: Params.MaxValuesStruct,
      _treeDepths: Params.TreeDepthsStruct,
      _coordinatorPubKey: DomainObjs.PubKeyStruct,
      _maci: AddressLike,
      _pollOwner: AddressLike
    ],
    [string],
    "nonpayable"
  >;

  deployTally: TypedContractMethod<
    [
      _verifier: AddressLike,
      _vkRegistry: AddressLike,
      _poll: AddressLike,
      _messageProcessor: AddressLike,
      _owner: AddressLike,
      mode: BigNumberish
    ],
    [string],
    "nonpayable"
  >;

  getMaxVoteOptions: TypedContractMethod<
    [_maciId: BigNumberish],
    [bigint],
    "view"
  >;

  initialize: TypedContractMethod<
    [
      _clonableMaciImplementation: AddressLike,
      _PollImplementation: AddressLike,
      _TallyImplementation: AddressLike,
      _MessageProcessorImplementation: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  maciSettings: TypedContractMethod<
    [arg0: BigNumberish],
    [
      [Params.TreeDepthsStructOutput, bigint, string, string] & {
        treeDepths: Params.TreeDepthsStructOutput;
        stateTreeDepth: bigint;
        verifier: string;
        vkRegistry: string;
      }
    ],
    "view"
  >;

  owner: TypedContractMethod<[], [string], "view">;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  setMaciSettings: TypedContractMethod<
    [
      _maciId: BigNumberish,
      _maciSettings: ClonableMACIFactory.MACI_SETTINGSStruct
    ],
    [void],
    "nonpayable"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "MESSAGE_DATA_LENGTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "createMACI"
  ): TypedContractMethod<
    [
      _signUpGatekeeper: AddressLike,
      _initialVoiceCreditProxy: AddressLike,
      _coordinator: AddressLike,
      _maciId: BigNumberish
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deployMessageProcessor"
  ): TypedContractMethod<
    [
      _verifier: AddressLike,
      _vkRegistry: AddressLike,
      _poll: AddressLike,
      _owner: AddressLike,
      mode: BigNumberish
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deployPoll"
  ): TypedContractMethod<
    [
      _duration: BigNumberish,
      _maxValues: Params.MaxValuesStruct,
      _treeDepths: Params.TreeDepthsStruct,
      _coordinatorPubKey: DomainObjs.PubKeyStruct,
      _maci: AddressLike,
      _pollOwner: AddressLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deployTally"
  ): TypedContractMethod<
    [
      _verifier: AddressLike,
      _vkRegistry: AddressLike,
      _poll: AddressLike,
      _messageProcessor: AddressLike,
      _owner: AddressLike,
      mode: BigNumberish
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getMaxVoteOptions"
  ): TypedContractMethod<[_maciId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<
    [
      _clonableMaciImplementation: AddressLike,
      _PollImplementation: AddressLike,
      _TallyImplementation: AddressLike,
      _MessageProcessorImplementation: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "maciSettings"
  ): TypedContractMethod<
    [arg0: BigNumberish],
    [
      [Params.TreeDepthsStructOutput, bigint, string, string] & {
        treeDepths: Params.TreeDepthsStructOutput;
        stateTreeDepth: bigint;
        verifier: string;
        vkRegistry: string;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setMaciSettings"
  ): TypedContractMethod<
    [
      _maciId: BigNumberish,
      _maciSettings: ClonableMACIFactory.MACI_SETTINGSStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;

  filters: {
    "Initialized(uint64)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
  };
}
