{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x474C223EBBCbBba7E2F932c52fbd80514E9382dB",
      "txHash": "0x731977082b46d4d6326e304b8aa002e4df80b3ed95dd9cbb3edc4de275dec209",
      "kind": "transparent"
    },
    {
      "address": "0x1530206254ead7f19951d37dA8b985fc8dC7E715",
      "txHash": "0xca9d887d0c766808fd0ca8886f51fb0448997014882ab5eaaa5518f19ad8b937",
      "kind": "transparent"
    },
    {
      "address": "0xFBC9de775bB711061d8BFE39B14b6eD03E4d1d05",
      "txHash": "0xf3972779a3acb1066f443dca1a6eae061f3bc4ca9577ed953e9d8ede5596eebc",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1f83b9aad707ec7b3fe40b444260bf3f9975614036149d0e46d3abcab010faa8": {
      "address": "0x73d7439cA441da0bED1020a1F1C88bD572f3D57c",
      "txHash": "0xe60a6555f8dbfbb7d998fd1ee4644b3891dd7dd26c914e6fbdd0a8ca687ee2c0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "maciSettings",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint8,t_struct(MACI_SETTINGS)4177_storage)",
            "contract": "ClonableMACIFactory",
            "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:33"
          },
          {
            "label": "clonableMaciImplementation",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "ClonableMACIFactory",
            "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:36"
          },
          {
            "label": "PollImplementation",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ClonableMACIFactory",
            "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:38"
          },
          {
            "label": "TallyImplementation",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "ClonableMACIFactory",
            "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:40"
          },
          {
            "label": "MessageProcessorImplementation",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "ClonableMACIFactory",
            "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:42"
          },
          {
            "label": "deployNonce",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "ClonableMACIFactory",
            "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)150_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)99_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(MACI_SETTINGS)4177_storage)": {
            "label": "mapping(uint8 => struct ClonableMACIFactory.MACI_SETTINGS)",
            "numberOfBytes": "32"
          },
          "t_struct(MACI_SETTINGS)4177_storage": {
            "label": "struct ClonableMACIFactory.MACI_SETTINGS",
            "members": [
              {
                "label": "treeDepths",
                "type": "t_struct(TreeDepths)22007_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stateTreeDepth",
                "type": "t_uint8",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "verifier",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "vkRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "emptyBallotTreeRoots",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(TreeDepths)22007_storage": {
            "label": "struct Params.TreeDepths",
            "members": [
              {
                "label": "intStateTreeDepth",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "messageTreeSubDepth",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "messageTreeDepth",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "voteOptionTreeDepth",
                "type": "t_uint8",
                "offset": 3,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "535685123b783cef379067a467218af5ceaf6938cdfc4d36d22bfb1e026f083e": {
      "address": "0x8935C2347BD79A62a19B5EB819F33bfd9c3fd968",
      "txHash": "0x2a1c3323208bb5e6232de7c4331057c5b067554acd6f0703679139b5fe7e688d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "anchorToProfileId",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "Registry",
            "src": "contracts/core/Registry.sol:108"
          },
          {
            "label": "profilesById",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(Profile)9602_storage)",
            "contract": "Registry",
            "src": "contracts/core/Registry.sol:110"
          },
          {
            "label": "profileIdToPendingOwner",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "Registry",
            "src": "contracts/core/Registry.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)150_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Profile)9602_storage)": {
            "label": "mapping(bytes32 => struct IRegistry.Profile)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Metadata)10081_storage": {
            "label": "struct Metadata",
            "members": [
              {
                "label": "protocol",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pointer",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Profile)9602_storage": {
            "label": "struct IRegistry.Profile",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_struct(Metadata)10081_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "anchor",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "61ad2e552fd6056b7ef0fa0811c690d6fe3868b31fd19dbc703e49a0051a25ad": {
      "address": "0x084182f3409Ec6155545307aCcB71754CDa526Cc",
      "txHash": "0x8e6f1027f259fafb3b3238e94915c01626bd97509f9f0baa061ba96b55469382",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "percentFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:126"
          },
          {
            "label": "baseFee",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:141"
          },
          {
            "label": "_poolIndex",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:144"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:145"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IRegistry)9775",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:145"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:146"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(Pool)9153_storage)",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:147"
          },
          {
            "label": "cloneableStrategies",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Allo",
            "src": "contracts/core/Allo.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)150_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)225_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_contract(IRegistry)9775": {
            "label": "contract IRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IStrategy)9944": {
            "label": "contract IStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Pool)9153_storage)": {
            "label": "mapping(uint256 => struct IAllo.Pool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Metadata)10081_storage": {
            "label": "struct Metadata",
            "members": [
              {
                "label": "protocol",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pointer",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Pool)9153_storage": {
            "label": "struct IAllo.Pool",
            "members": [
              {
                "label": "profileId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "strategy",
                "type": "t_contract(IStrategy)9944",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "metadata",
                "type": "t_struct(Metadata)10081_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "managerRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
