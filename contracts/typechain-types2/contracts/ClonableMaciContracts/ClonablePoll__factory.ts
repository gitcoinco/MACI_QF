/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ClonablePoll,
  ClonablePollInterface,
} from "../../../contracts/ClonableMaciContracts/ClonablePoll";

const _abi = [
  {
    inputs: [],
    name: "InvalidBatchLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "MaciPubKeyLargerThanSnarkFieldSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PollAlreadyInit",
    type: "error",
  },
  {
    inputs: [],
    name: "StateAqAlreadyMerged",
    type: "error",
  },
  {
    inputs: [],
    name: "StateAqSubtreesNeedMerge",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyMessages",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodOver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_stateRoot",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_numSignups",
        type: "uint256",
      },
    ],
    name: "MergeMaciStateAq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "MergeMaciStateAqSubRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_messageRoot",
        type: "uint256",
      },
    ],
    name: "MergeMessageAq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "MergeMessageAqSubRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        indexed: false,
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "PublishMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        indexed: false,
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "TopupMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "MESSAGE_DATA_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorPubKeyHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "emptyBallotRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extContracts",
    outputs: [
      {
        internalType: "contract IMACI",
        name: "maci",
        type: "address",
      },
      {
        internalType: "contract AccQueue",
        name: "messageAq",
        type: "address",
      },
      {
        internalType: "contract TopupCredit",
        name: "topupCredit",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeployTimeAndDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "pollDeployTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "hashMessageAndEncPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "msgHash",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct DomainObjs.PubKey",
            name: "pubKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "voiceCreditBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.StateLeaf",
        name: "_stateLeaf",
        type: "tuple",
      },
    ],
    name: "hashStateLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "ciphertext",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxMessages",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVoteOptions",
            type: "uint256",
          },
        ],
        internalType: "struct Params.MaxValues",
        name: "_maxValues",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "intStateTreeDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "messageTreeSubDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "messageTreeDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "voteOptionTreeDepth",
            type: "uint8",
          },
        ],
        internalType: "struct Params.TreeDepths",
        name: "_treeDepths",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_coordinatorPubKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IMACI",
            name: "maci",
            type: "address",
          },
          {
            internalType: "contract AccQueue",
            name: "messageAq",
            type: "address",
          },
          {
            internalType: "contract TopupCredit",
            name: "topupCredit",
            type: "address",
          },
        ],
        internalType: "struct Params.ExtContracts",
        name: "_extContracts",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxValues",
    outputs: [
      {
        internalType: "uint256",
        name: "maxMessages",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVoteOptions",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "mergeMaciStateAq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "mergeMaciStateAqSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mergeMessageAq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "mergeMessageAqSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mergedStateRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numSignUpsAndMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "numSUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numMsgs",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numSignups",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "dataToPad",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "msgType",
        type: "uint256",
      },
    ],
    name: "padAndHashMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "padKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "msgHash",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "publishMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message[]",
        name: "_messages",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey[]",
        name: "_encPubKeys",
        type: "tuple[]",
      },
    ],
    name: "publishMessageBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "stateAqMerged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeDepths",
    outputs: [
      {
        internalType: "uint8",
        name: "intStateTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "messageTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50614779806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200023c5760003560e01c80637296aaea116200013d578063ae93a21211620000bb578063bea140b31162000086578063bea140b3146200056f578063c17268d91462000586578063e1c7392a1462000590578063f2fde38b146200059a578063fba630f214620005b157600080fd5b8063ae93a21214620004d6578063b5f38c8114620004ed578063b87802c8146200050c578063bc14ee2b146200052357600080fd5b80638da5cb5b11620001085780638da5cb5b14620003fe578063929d773e14620004395780639c97172914620004505780639cfced971462000467578063ac98e5df146200047e57600080fd5b80637296aaea14620003af5780637d0a81c814620003c657806386f3c3f714620003dd5780638aa0ba9214620003f457600080fd5b80633dfb88b211620001cb5780635bb9399511620001965780635bb9399514620003515780635d5909dd146200036857806362a361bb1462000372578063683f3dc31462000389578063715018a614620003a557600080fd5b80633dfb88b2146200030b5780634909229f14620003225780634f367f0f146200032e57806358bfc379146200033a57600080fd5b8063167fd483116200020c578063167fd48314620002b7578063184ff47f14620002ce57806331e766a514620002e5578063394b78a214620002f457600080fd5b8062329f2f14620002415780630396a0ce146200024d57806306912d3c14620002765780630f4cf692146200029e575b600080fd5b6200024b620005bb565b005b6010546011546200025c919082565b604080519283526020830191909152015b60405180910390f35b6200028d6200028736600462001b39565b620006ba565b6040516200026d9392919062001b96565b620002a8600e5481565b6040519081526020016200026d565b620002a8620002c836600462001c96565b6200076e565b6200024b620002df36600462001cd2565b62000851565b6006546007546200025c919082565b6200024b6200030536600462001cf5565b62000a12565b620002a86200031c36600462001d3c565b62000b9b565b600a54600b546200025c565b600f54600e546200025c565b620002a86200034b36600462001d7c565b62000c21565b620002a86200036236600462001cd2565b62000cb3565b620002a8600f5481565b620002a86200038336600462001e2d565b62000cdc565b62000392600a81565b60405160ff90911681526020016200026d565b6200024b62000d18565b6200024b620003c036600462001e4c565b62000d30565b620002a8620003d736600462001f1e565b62000dc2565b6200024b620003ee36600462001cd2565b62000e06565b620002a860085481565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b0390911681526020016200026d565b6200024b6200044a36600462001f94565b62000f12565b6200024b62000461366004620020a9565b62001270565b620002a862000478366004620020c3565b62001343565b601254620004a89060ff808216916101008104821691620100008204811691630100000090041684565b6040805160ff958616815293851660208501529184169183019190915290911660608201526080016200026d565b6200024b620004e7366004620020a9565b6200137f565b600c54620004fb9060ff1681565b60405190151581526020016200026d565b620002a86200051d366004620020a9565b62001668565b60135460145460155462000544926001600160a01b03908116928116911683565b604080516001600160a01b03948516815292841660208401529216918101919091526060016200026d565b620002a86200058036600462002149565b62001680565b620002a8600d5481565b6200024b620016bc565b6200024b620005ab36600462002189565b620017eb565b620002a860095481565b620005c562001833565b6000600a5442620005d79190620021bf565b9050600b548111620005fc57604051630931513d60e11b815260040160405180910390fd5b6014546012546040516324a47aeb60e01b81526201000090910460ff1660048201526000916001600160a01b0316906324a47aeb906024016020604051808303816000875af115801562000654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200067a9190620021d5565b90507fc5624680ab5d50c84507f9e0dc2032163de2bda906ab8a661a53dd4d43bd5dc781604051620006ae91815260200190565b60405180910390a15050565b620006c46200195b565b60408051808201909152600080825260208201526000620006e46200197c565b85518152602080870151828201526040805180820182527f171e826ad4a870fd925e0bf0e87884e70e080879c2205ef10114f28a3b6f6dd781527f2bd407d897fbbca9f88adfd2d15252e69de8c1564eb4d3d27162e259172f1a1d818401528151808301909252878252918101839052945092506200076484846200076e565b9150509250925092565b60006200077a6200199b565b602084810180515183528051820151918301919091528051604090810151908301528051606090810151908301525160809081015190820152620007bd6200199b565b6020858101805160a0908101518452815160c0015184840152815160e00151604080860191909152825161010001516060860152915161012001516080850152815190810190915286518152620008489181016200081b8562001343565b81526020016200082b8462001343565b815260200186600001518152602001866020015181525062001343565b95945050505050565b6000600a5442620008639190620021bf565b9050600b548110620008885760405163148fb9a960e31b815260040160405180910390fd5b601054600e5410620008ad57604051631ec0b2f760e01b815260040160405180910390fd5b600e805460010190556015546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156200090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000934919062002205565b506200093f620019b9565b8381526020810183905260008062000959836002620006ba565b601454604051631ffc735d60e01b8152600481018390529395509093506001600160a01b031691631ffc735d91506024016020604051808303816000875af1158015620009aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d09190620021d5565b507f935afc7bb7cc33eb3e24e20dcfc75f5b21fa58e9c82cca06435238efaf9a3a588260405162000a02919062002229565b60405180910390a1505050505050565b6000600a544262000a249190620021bf565b9050600b54811062000a495760405163148fb9a960e31b815260040160405180910390fd5b601054600e541062000a6e57604051631ec0b2f760e01b815260040160405180910390fd5b60008051602062004724833981519152823510158062000aa1575060008051602062004724833981519152826020013510155b1562000ac0576040516354be831760e11b815260040160405180910390fd5b600e805460019081019091558352600062000ae684620002c8368690038601866200223a565b601454604051631ffc735d60e01b8152600481018390529192506001600160a01b031690631ffc735d906024016020604051808303816000875af115801562000b33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b599190620021d5565b507fe2067f06dd7b8159b21a5490f8663f6bb031d9b35ed6d298b5489674cb9cda4b848460405162000b8d92919062002259565b60405180910390a150505050565b60405163248f667760e01b815260009073__$e61c65d9562aef5fa6ab22c0f787cf1e30$__9063248f66779062000bd790859060040162002284565b602060405180830381865af415801562000bf5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c1b9190620021d5565b92915050565b60006000805160206200472483398151915260028360405160200162000c489190620022b7565b60408051601f198184030181529082905262000c6491620022ef565b602060405180830381855afa15801562000c82573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019062000ca79190620021d5565b62000c1b919062002320565b600062000cbf620019b9565b8381526020810183905262000cd48162000cdc565b949350505050565b6040516314d2f97b60e11b815260009073__$1540826e134b1b69b7091c82576ee3aadd$__906329a5f2f69062000bd790859060040162002343565b62000d2262001833565b62000d2e600062001891565b565b82811462000d515760405163ca3487f760e01b815260040160405180910390fd5b8260005b8181101562000dba5762000db186868381811062000d775762000d77620021ef565b9050610160020180360381019062000d9091906200236d565b85858481811062000da55762000da5620021ef565b90506040020162000a12565b60010162000d55565b505050505050565b600062000dce620019d7565b825151815282516020908101518183015283015181600260200201526040830151606082015262000dff8162000b9b565b9392505050565b62000e1062001833565b6000600a544262000e229190620021bf565b9050600b54811162000e4757604051630931513d60e11b815260040160405180910390fd5b600c5460ff161562000e6c5760405163084ef7b960e41b815260040160405180910390fd5b60135460405163cfa1fa0360e01b815260048101859052602481018490526001600160a01b039091169063cfa1fa0390604401600060405180830381600087803b15801562000eba57600080fd5b505af115801562000ecf573d6000803e3d6000fd5b505050507fbe5eae95ff0a9a2779506ae62da06dda1e349311d3f2b6ceb990ea42b6a5f20b8360405162000f0591815260200190565b60405180910390a1505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801562000f595750825b905060008267ffffffffffffffff16600114801562000f775750303b155b90508115801562000f86575080155b1562000fa55760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831562000fd057845460ff60401b1916600160401b1785555b62000fda62001902565b62000fe5336200190c565b6200109e7f0ad794e7fb50257e0edc93fe4616c69ea691e7a6c653333b6a5b507d798947276000557ec31c90221285dc87ee66daadc19f64f922e45a613f4f5429d74ddc7d66e0236001557f2afdf0e1d10d07d0df3a8481202bf2595108195e34d4ccb88742641c576aa77d6002557f177bbb5acaafc1f1deb73b8ae33f97132089ab84039048a096e202b1f8c429106003557f25c1a155f21ae70ca3b8bdb27961efdee58bdafff83274c18dd37d0f0a8bfbb5600455565b865160008051602062004724833981519152111580620010d1575060008051602062004724833981519152876020015110155b15620010f0576040516354be831760e11b815260040160405180910390fd5b600088602001516040516200110590620019f5565b60ff9091168152602001604051809103906000f0801580156200112c573d6000803e3d6000fd5b506001600160a01b0381166020808a019190915289516006819055908a015160078190559192506200115e9162000cb3565b600855508551601380546001600160a01b039283166001600160a01b031991821617909155602080890151601480549185169184169190911790556040808a01516015805491909516931692909217909255600b8c90558a516010558a820151601155895160128054938c0151928c015160608d015160ff90811663010000000263ff0000001992821662010000029290921663ffff0000199582166101000261ffff19909716919094161794909417929092161791909117905542600a5583156200126457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6200127a62001833565b6000600a54426200128c9190620021bf565b9050600b548111620012b157604051630931513d60e11b815260040160405180910390fd5b60145460405163c15da65b60e01b8152600481018490526001600160a01b039091169063c15da65b90602401600060405180830381600087803b158015620012f857600080fd5b505af11580156200130d573d6000803e3d6000fd5b505050507f1245b881cb30fdad22b2f9fde2d5c2a3605bbdf272d5e8a2235d8c9e81aba2ce82604051620006ae91815260200190565b604051630926f44b60e31b815260009073__$46fbdf6658faf65265971bdad66851b86c$__90634937a2589062000bd79085906004016200238d565b6200138962001833565b6000600a54426200139b9190620021bf565b9050600b548111620013c057604051630931513d60e11b815260040160405180910390fd5b600c5460ff1615620013e55760405163084ef7b960e41b815260040160405180910390fd5b600c805460ff1916600117905560135460408051630c0775ff60e31b815290516001600160a01b039092169163603baff8916004808201926020929091908290030181865afa1580156200143d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014639190620023b7565b6001600160a01b031663b6a64acd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620014a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014c7919062002205565b620014e457604051624a03c360e31b815260040160405180910390fd5b60135460405163dd0982a360e01b8152600481018490526001600160a01b039091169063dd0982a3906024016020604051808303816000875af115801562001530573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015569190620021d5565b6009556200156362001a03565b600954815260125460009062001586906001906301000000900460ff16620023d7565b60ff16600581106200159c576200159c620021ef565b0154602082015260006040820152620015b58162001680565b600d556013546040805163122db15360e01b815290516001600160a01b039092169163122db153916004808201926020929091908290030181865afa15801562001603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016299190620021d5565b600f8190556009546040517fa80928657383ff9d374f1409cf51e7460a64472b6baeb5ded1199830c15bae019262000f05928252602082015260400190565b600081600581106200167957600080fd5b0154905081565b6040516304b98e1d60e31b815260009073__$fa059fb1da6d850ca47ea49359bfe89f78$__906325cc70e89062000bd7908590600401620023f3565b60055460ff1615620016e1576040516342a2e18d60e01b815260040160405180910390fd5b6005805460ff19166001908117909155600e8054909101905562001704620019b9565b7f12817f4161f2f5ded33f26c55735a77e80e4f8975483c8c2704745128417f711815260006020820181905280806200173f846001620006ba565b601454604051631ffc735d60e01b81526004810183905293965091945092506001600160a01b031690631ffc735d906024016020604051808303816000875af115801562001791573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017b79190620021d5565b507fe2067f06dd7b8159b21a5490f8663f6bb031d9b35ed6d298b5489674cb9cda4b838360405162000b8d9291906200241d565b620017f562001833565b6001600160a01b0381166200182557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620018308162001891565b50565b33620018667f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161462000d2e5760405163118cdaa760e01b81523360048201526024016200181c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b62000d2e62001911565b620017f55b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1662000d2e57604051631afcd79f60e31b815260040160405180910390fd5b604051806040016040528060008152602001620019776200197c565b905290565b604051806101400160405280600a906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6122dc806200244883390190565b60405180606001604052806003906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171562001a5d5762001a5d62001a21565b60405290565b6040516060810167ffffffffffffffff8111828210171562001a5d5762001a5d62001a21565b6040516080810167ffffffffffffffff8111828210171562001a5d5762001a5d62001a21565b604051601f8201601f1916810167ffffffffffffffff8111828210171562001adb5762001adb62001a21565b604052919050565b600082601f83011262001af557600080fd5b62001aff62001a37565b80604084018581111562001b1257600080fd5b845b8181101562001b2e57803584526020938401930162001b14565b509095945050505050565b6000806060838503121562001b4d57600080fd5b62001b59848462001ae3565b946040939093013593505050565b8051825260208082015181840160005b600a81101562000dba5782518252918301919083019060010162001b77565b6101c0810162001ba7828662001b67565b83516101608301526020909301516101808201526101a00152919050565b600061016080838503121562001bda57600080fd5b62001be462001a37565b915082358252602084603f85011262001bfc57600080fd5b604051610140810181811067ffffffffffffffff8211171562001c235762001c2362001a21565b60405291840191808684111562001c3957600080fd5b8286015b8481101562001c56578035825290830190830162001c3d565b5050908301525092915050565b60006040828403121562001c7657600080fd5b62001c8062001a37565b9050813581526020820135602082015292915050565b6000806101a0838503121562001cab57600080fd5b62001cb7848462001bc5565b915062001cc984610160850162001c63565b90509250929050565b6000806040838503121562001ce657600080fd5b50508035926020909101359150565b6000808284036101a081121562001d0b57600080fd5b62001d17858562001bc5565b9250604061015f198201121562001d2d57600080fd5b50610160830190509250929050565b60006080828403121562001d4f57600080fd5b82601f83011262001d5f57600080fd5b62001d6962001a89565b80608084018581111562001b1257600080fd5b6000602080838503121562001d9057600080fd5b823567ffffffffffffffff8082111562001da957600080fd5b818501915085601f83011262001dbe57600080fd5b81358181111562001dd35762001dd362001a21565b8060051b915062001de684830162001aaf565b818152918301840191848101908884111562001e0157600080fd5b938501935b8385101562001e215784358252938501939085019062001e06565b98975050505050505050565b60006040828403121562001e4057600080fd5b62000dff838362001ae3565b6000806000806040858703121562001e6357600080fd5b843567ffffffffffffffff8082111562001e7c57600080fd5b818701915087601f83011262001e9157600080fd5b81358181111562001ea157600080fd5b8860206101608302850101111562001eb857600080fd5b60209283019650945090860135908082111562001ed457600080fd5b818701915087601f83011262001ee957600080fd5b81358181111562001ef957600080fd5b8860208260061b850101111562001f0f57600080fd5b95989497505060200194505050565b60006080828403121562001f3157600080fd5b62001f3b62001a63565b62001f47848462001c63565b815260408301356020820152606083013560408201528091505092915050565b803560ff8116811462001f7957600080fd5b919050565b6001600160a01b03811681146200183057600080fd5b600080600080600085870361018081121562001faf57600080fd5b8635955062001fc2886020890162001c63565b94506080605f198201121562001fd757600080fd5b62001fe162001a89565b62001fef6060890162001f67565b815262001fff6080890162001f67565b60208201526200201260a0890162001f67565b60408201526200202560c0890162001f67565b606082015293506200203b8860e0890162001c63565b9250606061011f19820112156200205157600080fd5b506200205c62001a63565b6101208701356200206d8162001f7e565b8152610140870135620020808162001f7e565b6020820152610160870135620020968162001f7e565b6040820152949793965091945092919050565b600060208284031215620020bc57600080fd5b5035919050565b600060a08284031215620020d657600080fd5b82601f830112620020e657600080fd5b60405160a0810181811067ffffffffffffffff821117156200210c576200210c62001a21565b6040528060a08401858111156200212257600080fd5b845b818110156200213e57803583526020928301920162002124565b509195945050505050565b6000606082840312156200215c57600080fd5b82601f8301126200216c57600080fd5b6200217662001a63565b80606084018581111562001b1257600080fd5b6000602082840312156200219c57600080fd5b813562000dff8162001f7e565b634e487b7160e01b600052601160045260246000fd5b8181038181111562000c1b5762000c1b620021a9565b600060208284031215620021e857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200221857600080fd5b8151801515811462000dff57600080fd5b610160810162000c1b828462001b67565b6000604082840312156200224d57600080fd5b62000dff838362001c63565b6101a081016200226a828562001b67565b823561016083015260208301356101808301529392505050565b60808101818360005b6004811015620022ae5781518352602092830192909101906001016200228d565b50505092915050565b815160009082906020808601845b83811015620022e357815185529382019390820190600101620022c5565b50929695505050505050565b6000825160005b81811015620023125760208186018101518583015201620022f6565b506000920191825250919050565b6000826200233e57634e487b7160e01b600052601260045260246000fd5b500690565b60408101818360005b6002811015620022ae5781518352602092830192909101906001016200234c565b600061016082840312156200238157600080fd5b62000dff838362001bc5565b60a08101818360005b6005811015620022ae57815183526020928301929091019060010162002396565b600060208284031215620023ca57600080fd5b815162000dff8162001f7e565b60ff828116828216039081111562000c1b5762000c1b620021a9565b60608101818360005b6003811015620022ae578151835260209283019290910190600101620023fc565b6101a081016200242e828562001b67565b8251610160830152602083015161018083015262000dff56fe60e06040523480156200001157600080fd5b50604051620022dc380380620022dc83398101604081905262000034916200063d565b8080600533806200006057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006b81620005ed565b50816000036200008e5760405163682e504160e11b815260040160405180910390fd5b6020821115620000bc57604051637ccdcc9760e11b8152600481018390526020602482015260440162000057565b80600214158015620000cf575080600514155b15620000ee57604051636f7b6c0360e01b815260040160405180910390fd5b6000805460ff60a01b191660028314600160a01b02179055608082905260a08190526200011c82826200076c565b60c05250507f12817f4161f2f5ded33f26c55735a77e80e4f8975483c8c2704745128417f7116101725550507f1c8de1edeabc24fc4c1595acaabb70be9b70f351d58c6fa338e1e9a994413bfb610173557f22fcda488c14b34fc60eb073fbe92fe10793e2ab14682e0f057332ddbef3d55c610174557f2db474db7c7212646cb15c6177d87be30711e6c04f1139d8e495ef1d1d998227610175557efde404053ec39a19f6ac347121a2264815dda84f910a388cb372e967a5d08c610176557f0723792ffab6ec6cfb3ece1509b9b4fb07e5bdb2299d1538e6e1db916f90cf89610177557f2a4392ec4e3d1811cd6a950cc865ee6f2342910a6551c5dce38cb995576c7c70610178557f1dead4c14f75e9d8449c80b648dcd4694c2ee50da2ba16e5e438f0d77ab02e34610179557f124c53ce0953fffb7ab5e3c143df6cd48ba747d3959fcb8086405d763ed5455061017a557f02bae19605746a8cd3f0927b2c01630f36f4d1bab9216ca839833e7ff6efa20661017b557f1f8375099becf17173d457d0d07bfb74c7067df1143b5ad987046e8e66817bc961017c557f0e13e954d61bb3fa3b03e7d136ca909b610fa2ca4443d920d94d16684f2b83d461017d557f1416ef2fc4f88fcfc4f9eb12f8e214b1c3e31c6c10ece9cfa51f078a3bbf345761017e557f032f915ff71e198a7955d2697249f40fb94c65812ed24e670c9700f52fdf6e0e61017f557f08bfebf4b3ddb0f8c51dd40193f5996da9f3d799ee0d8beb6be4038132df60b4610180557f065ac498cf4a5acaeb3b6cee826da9f834c961fa39feff6ae925b90dff79b613610181557f2e72c628101a93201b912a3e3fe96d39b0a9076ec39b7935a015c59bb32b8a2a610182557f19bba68e7b9da1e6ec42e52d7ab2adaf3b6a5521b1a454ec70f62e0ab702c085610183557f0de1f72745a5af2a34cac412e00eb6c8b5db1f3b52fa1bff88076c2726b83b08610184557f2e8f152603b2fac10d6a14c841327c23c502537367ccb1e42fab9a3bd9db2a8d610185557f14e16c3e0dcfd7e621a32627ebf37f6c0afb4467d34c7b7aeffded11769dec85610186557f0be1e62127948b4805c85a1d836574f0892ca6473fcde98f3fd1781248a9768f610187557f0930288fbd7c849197c8372f1dd8f9087f8a03f09b9cd904a469c15ef6b1b515610188557f231cac34e215e3f404d2fcfb79e0705deeb3d40978f0ee31072f6cbc1b579e33610189557f2e0e3cd2718ac7199b81dc14e841de40a9536b7ffe95fa1fc9c6b799e43e2c9761018a557f0718452506f0a232e98966d84b1a4675a66bd80263a2dc58bdac873825752fc361018b557f162d4ed998307d6e132edbf5c11f62f53d4636aa10cb3c2244c2bf5577168c3761018c557f247d6a5544a8f295a894ae77c7efcdcbf52e3bf4e5d0c0d2f40557a61d44984861018d557f0b8de3868471f109e91670daca698dba917d1c5535821f33aa9598d1db8e3d1961018e557f29851997020f527c92e20f030d232b81d334144a641e6a8866b46dd925005bbb61018f557f1a9cfcbe29a2b6503a03049727c0bca3111afd62f2836f392080321d1b4ef642610190557f1aa3ead91fa89cc1d6cb1d0eb76a27190c6abfdd3265d6d0a1e5c58feddaddf6610191557f0702fc26a7d367e6677efefd95204a7e00144c2fc7dbc2a581aa00d99f51f0816101925562000781565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200065057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006ae57816000190482111562000692576200069262000657565b80851615620006a057918102915b93841c939080029062000672565b509250929050565b600082620006c75750600162000766565b81620006d65750600062000766565b8160018114620006ef5760028114620006fa576200071a565b600191505062000766565b60ff8411156200070e576200070e62000657565b50506001821b62000766565b5060208310610133831016604e8410600b84101617156200073f575081810a62000766565b6200074b83836200066d565b806000190482111562000762576200076262000657565b0290505b92915050565b60006200077a8383620006b6565b9392505050565b60805160a05160c051611aad6200082f600039600081816103ea01528181610a2501528181610ac201528181610c7f0152610d820152600081816103230152818161056e015281816106e401528181610bb401528181610ec301528181611037015261129801526000818161041a0152818161047b0152818161054401528181610bed01528181610cb801528181610d0201528181610e6401528181610f1a01526111d30152611aad6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806381d6a24a116100c3578063c00bdbcc1161007c578063c00bdbcc146102b8578063c15da65b146102cb578063d9c55ce1146102de578063dda89a6e146102e6578063e93fb4d4146102f0578063f2fde38b1461030357600080fd5b806381d6a24a146102455780638da5cb5b146102615780639cfced971461027c578063a27154ba1461028f578063b6a64acd14610297578063bea140b3146102a557600080fd5b806358bfc3791161011557806358bfc379146101cc5780635bb93995146101df5780635bf1fa4d146101f257806362a361bb1461020557806369e7c58614610218578063715018a61461023b57600080fd5b80631b9b8aa71461015d5780631ffc735d1461018357806324a47aeb146101965780633bfa6fce146101a95780633dfb88b2146101b15780633e1a8cc1146101c4575b600080fd5b61017061016b3660046114ba565b610316565b6040519081526020015b60405180910390f35b6101706101913660046114ba565b610399565b6101706101a43660046114ba565b6104c7565b6101706106d8565b6101706101bf36600461151a565b610723565b6101706107a4565b6101706101da366004611598565b6107d3565b6101706101ed36600461163e565b61086d565b61017061020036600461163e565b610892565b610170610213366004611660565b610931565b61016e5461022b90610100900460ff1681565b604051901515815260200161017a565b61024361096b565b005b610170546001546040805192835260208301919091520161017a565b6000546040516001600160a01b03909116815260200161017a565b61017061028a3660046116bb565b61097f565b610170602081565b61016e5461022b9060ff1681565b6101706102b3366004611714565b6109b9565b6102436102c63660046114ba565b6109f3565b6102436102d93660046114ba565b610a6f565b610243610c75565b6101706101715481565b6101706102fe3660046114ba565b610dbf565b61024361031136600461176d565b610dfa565b61017154600090610347837f0000000000000000000000000000000000000000000000000000000000000000611897565b101561037d5761017154604051627289df60e61b8152610374918491600401918252602082015260400190565b60405180910390fd5b61014d8260218110610391576103916118a3565b015492915050565b60006103a3610e35565b50610171546103b3826000610e62565b6103be8160016118b9565b610171556103cf61014d600061141f565b600061016f5561016e805460ff191690556101715461040f907f0000000000000000000000000000000000000000000000000000000000000000906118cc565b6000036104c25760027f000000000000000000000000000000000000000000000000000000000000000060218110610449576104496118a3565b600402015460018054600090815261014c6020526040812092909255805491610471836118ee565b90915550600290507f0000000000000000000000000000000000000000000000000000000000000000602181106104aa576104aa6118a3565b6004020160008091018190556104c29060869061141f565b919050565b60006104d1610e35565b816000036104f257604051630543d40760e11b815260040160405180910390fd5b61016e5460ff1661051657604051631e596e4360e11b815260040160405180910390fd5b602082111561054257604051632cd31ae960e01b81526004810183905260206024820152604401610374565b7f00000000000000000000000000000000000000000000000000000000000000005b61017154610592827f0000000000000000000000000000000000000000000000000000000000000000611897565b10156105aa57806105a2816118ee565b915050610564565b808310156105d457604051627289df60e61b81526004810184905260248101829052604401610374565b8083036106105761016f5461014d84602181106105f3576105f36118a3565b0155505061016e805461ff00191661010017905561016f54919050565b61016f549150805b838110156106aa57600061062b82610fa3565b600054909150600160a01b900460ff16156106635761064861142e565b8481526020810182905261065b81610931565b945050610697565b61066b61144c565b848152602081018290526040810182905260608101829052608081018290526106938161097f565b9450505b50806106a2816118ee565b915050610618565b508161014d84602181106106c0576106c06118a3565b015561016e805461ff00191661010017905550919050565b60015b600154610708827f0000000000000000000000000000000000000000000000000000000000000000611897565b10156107205780610718816118ee565b9150506106db565b90565b60405163248f667760e01b815260009073__$e61c65d9562aef5fa6ab22c0f787cf1e30$__9063248f66779061075d908590600401611907565b602060405180830381865af415801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190611938565b92915050565b61016e5460009060ff166107cb57604051631e596e4360e11b815260040160405180910390fd5b5061016f5490565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016002836040516020016108099190611951565b60408051601f198184030181529082905261082391611987565b602060405180830381855afa158015610840573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108639190611938565b61079e91906118cc565b600061087761142e565b8381526020810183905261088a81610931565b949350505050565b600061089c61144c565b600284602181106108af576108af6118a3565b60040201548152600284602181106108c9576108c96118a3565b60040201600101548160016020020152600284602181106108ec576108ec6118a3565b600402016002015481600260200201526002846021811061090f5761090f6118a3565b6004020160030154816003602002015282816004602002015261088a8161097f565b6040516314d2f97b60e11b815260009073__$1540826e134b1b69b7091c82576ee3aadd$__906329a5f2f69061075d9085906004016119b6565b610973610e35565b61097d6000610fb9565b565b604051630926f44b60e31b815260009073__$46fbdf6658faf65265971bdad66851b86c$__90634937a2589061075d9085906004016119de565b6040516304b98e1d60e31b815260009073__$fa059fb1da6d850ca47ea49359bfe89f78$";

type ClonablePollConstructorParams =
  | [linkLibraryAddresses: ClonablePollLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClonablePollConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ClonablePoll__factory extends ContractFactory {
  constructor(...args: ClonablePollConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClonablePoll__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClonablePollLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e61c65d9562aef5fa6ab22c0f787cf1e30\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1540826e134b1b69b7091c82576ee3aadd\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$46fbdf6658faf65265971bdad66851b86c\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fa059fb1da6d850ca47ea49359bfe89f78\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ClonablePoll & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClonablePoll__factory {
    return super.connect(runner) as ClonablePoll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClonablePollInterface {
    return new Interface(_abi) as ClonablePollInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClonablePoll {
    return new Contract(address, _abi, runner) as unknown as ClonablePoll;
  }
}

export interface ClonablePollLibraryAddresses {
  ["maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
