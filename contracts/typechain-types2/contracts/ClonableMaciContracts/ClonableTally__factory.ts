/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ClonableTally,
  ClonableTallyInterface,
} from "../../../contracts/ClonableMaciContracts/ClonableTally";

const _abi = [
  {
    inputs: [],
    name: "AllBallotsTallied",
    type: "error",
  },
  {
    inputs: [],
    name: "BatchStartIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTallyVotesProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "NumSignUpsTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessingNotComplete",
    type: "error",
  },
  {
    inputs: [],
    name: "TallyBatchSizeTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MESSAGE_DATA_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
    ],
    name: "genTallyVotesPackedVals",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
    ],
    name: "genTallyVotesPublicInputHash",
    outputs: [
      {
        internalType: "uint256",
        name: "inputHash",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vkRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poll",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mp",
        type: "address",
      },
      {
        internalType: "enum DomainObjs.Mode",
        name: "_mode",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isTallied",
    outputs: [
      {
        internalType: "bool",
        name: "tallied",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageProcessor",
    outputs: [
      {
        internalType: "contract IMessageProcessor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mode",
    outputs: [
      {
        internalType: "enum DomainObjs.Mode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poll",
    outputs: [
      {
        internalType: "contract IPoll",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyBatchNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "tallyVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSbCommitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spent",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_spentProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_spentSalt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultCommitment",
        type: "uint256",
      },
    ],
    name: "verifyPerVOSpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSpentSalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
    ],
    name: "verifySpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
    ],
    name: "verifyTallyProof",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyResult",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_tallyResultProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_tallyResultSalt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
    ],
    name: "verifyTallyResult",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vkRegistry",
    outputs: [
      {
        internalType: "contract IVkRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612267806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c80636b148b60116100f9578063afb93bd311610097578063d0380fe211610071578063d0380fe2146103d5578063d13181b8146103e8578063e3ff7606146103f1578063f2fde38b146103f957600080fd5b8063afb93bd3146103a6578063b03698f2146103af578063bea140b3146103c257600080fd5b80638da5cb5b116100d35780638da5cb5b1461033d5780639cfced971461036d578063a117527914610380578063a21fb5111461039357600080fd5b80636b148b601461030f578063715018a6146103225780637485dba11461032a57600080fd5b80632d966bf4116101665780635bb93995116101405780635bb93995146102c657806361750293146102d957806362a361bb146102e2578063683f3dc3146102f557600080fd5b80632d966bf41461027f5780633dfb88b21461029257806358bfc379146102b357600080fd5b806316425eeb116101a257806316425eeb1461023057806323e3feb114610238578063295a52121461024b5780632b7ac3f31461026c57600080fd5b80628c2676146101c857806310bc5f51146101dd57806313fb893214610205575b600080fd5b6101db6101d636600461154d565b61040c565b005b6101f06101eb3660046115c2565b61059c565b60405190151581526020015b60405180910390f35b600454610218906001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b6101db610634565b6101db610246366004611606565b610757565b60065461025f90600160a01b900460ff1681565b6040516101fc919061166c565b600354610218906001600160a01b031681565b6101f061028d366004611699565b6108e9565b6102a56102a03660046117e2565b610976565b6040519081526020016101fc565b6102a56102c1366004611884565b6109f7565b6102a56102d436600461190f565b610a91565b6102a560005481565b6102a56102f0366004611931565b610ab6565b6102fd600a81565b60405160ff90911681526020016101fc565b6102a561031d3660046115c2565b610af0565b6101db610bbd565b6101f0610338366004611991565b610bcf565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610218565b6102a561037b3660046119d9565b610e63565b600554610218906001600160a01b031681565b6101f06103a1366004611699565b610e9d565b6102a560015481565b6102a56103bd366004611a14565b610f64565b6102a56103d0366004611a40565b610feb565b600654610218906001600160a01b031681565b6102a560025481565b6101f0611025565b6101db610407366004611a99565b611136565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156104525750825b905060008267ffffffffffffffff16600114801561046f5750303b155b90508115801561047d575080155b1561049b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104c557845460ff60401b1916600160401b1785555b6104cd611179565b6104d633611181565b600380546001600160a01b03808d166001600160a01b031992831617909255600480548c8416908316179055600580548b841690831617905560068054928a1691831682178155889290916001600160a81b031990911617600160a01b83600181111561054557610545611634565b0217905550831561059057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b60006105a66114de565b8381526105b38686610a91565b602082015260408101839052600654600090600160a01b900460ff1660018111156105e0576105e0611634565b036105f8576105f186868686611189565b915061062b565b6001600654600160a01b900460ff16600181111561061857610618611634565b0361062b576106288686866111c3565b91505b50949350505050565b61063c6111f5565b600660009054906101000a90046001600160a01b03166001600160a01b0316638763d0c46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190611ad3565b6106d05760405163f13e1b8560e01b815260040160405180910390fd5b60025460000361075557600660009054906101000a90046001600160a01b03166001600160a01b031663d13181b86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190611af5565b6002555b565b61075f6111f5565b600554610774906001600160a01b0316611250565b61077c610634565b6005546040805163ac98e5df60e01b815290516000926001600160a01b03169163ac98e5df9160048083019260809291908290030181865afa1580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190611b0e565b505050905060008160056107fe9190611c67565b90506000816001546108109190611c76565b600180548101905560055460408051634f367f0f60e01b815281519394506000936001600160a01b0390931692634f367f0f926004808401939192918290030181865afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190611c8d565b5090508082106108ac5760405163b3f8c18960e01b815260040160405180910390fd5b60006108bb868385878b610bcf565b9050806108db576040516341acf34d60e01b815260040160405180910390fd5b505050600093909355505050565b600080600654600160a01b900460ff16600181111561090a5761090a611634565b1461092857604051630280e1e560e61b815260040160405180910390fd5b6000610937858b8b8b8b6112ed565b90506109416114de565b838152602081018590526109558288610a91565b604082015260005461096682610feb565b149b9a5050505050505050505050565b60405163248f667760e01b815260009073__$e61c65d9562aef5fa6ab22c0f787cf1e30$__9063248f6677906109b0908590600401611cb1565b602060405180830381865af41580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190611af5565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001600283604051602001610a2d9190611ce2565b60408051601f1981840301815290829052610a4791611d18565b602060405180830381855afa158015610a64573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a879190611af5565b6109f19190611d5d565b6000610a9b6114fc565b83815260208101839052610aae81610ab6565b949350505050565b6040516314d2f97b60e11b815260009073__$1540826e134b1b69b7091c82576ee3aadd$__906329a5f2f6906109b0908590600401611d71565b600080610afe868686610f64565b60408051600480825260a0820190925291925060009190602082016080803683370190505090508181600081518110610b3957610b39611abd565b60200260200101818152505060025481600181518110610b5b57610b5b611abd565b60200260200101818152505060005481600281518110610b7d57610b7d611abd565b6020026020010181815250508381600381518110610b9d57610b9d611abd565b602002602001018181525050610bb2816109f7565b979650505050505050565b610bc56111f5565b6107556000611424565b6000806000600560009054906101000a90046001600160a01b03166001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b9190611b0e565b9350505091506000600560009054906101000a90046001600160a01b03166001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cca9190611d99565b505090506000600460009054906101000a90046001600160a01b03166001600160a01b03166310b37e4d836001600160a01b031663652c76e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d569190611de6565b60065460405160e084901b6001600160e01b0319168152610d89929189918991600160a01b900460ff1690600401611e03565b600060405180830381865afa158015610da6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dce9190810190611ee8565b90506000610dde8a8a8a8a610af0565b6003546040516308adcb2560e21b81529192506001600160a01b0316906322b72c9490610e13908e9086908690600401612046565b602060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190611ad3565b9b9a5050505050505050505050565b604051630926f44b60e31b815260009073__$46fbdf6658faf65265971bdad66851b86c$__90634937a258906109b090859060040161211e565b600080610ead858b8b8b8b6112ed565b90506000600654600160a01b900460ff166001811115610ecf57610ecf611634565b03610f0b57610edc6114de565b610ee68288610a91565b81526020810185905260408101849052600054610f0282610feb565b14925050610f57565b6001600654600160a01b900460ff166001811115610f2b57610f2b611634565b03610f5757610f386114fc565b610f428288610a91565b81526020810185905260005461096682610ab6565b5098975050505050505050565b6000600160321b8410610f8a57604051631805864f60e21b815260040160405180910390fd5b600160321b8310610fae576040516334dd29a960e21b815260040160405180910390fd5b600160321b8210610fd25760405163cdc3c16b60e01b815260040160405180910390fd5b603284901b610fe18385612146565b610aae919061215a565b6040516304b98e1d60e31b815260009073__$fa059fb1da6d850ca47ea49359bfe89f78$__906325cc70e8906109b090859060040161216d565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa15801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f9190611b0e565b505060055460408051634f367f0f60e01b815281519495506000946001600160a01b039093169350634f367f0f92600480830193928290030181865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190611c8d565b50905080611120836005611c67565b60015461112d9190611c76565b10159250505090565b61113e6111f5565b6001600160a01b03811661116d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61117681611424565b50565b610755611495565b61113e611495565b60006111936114de565b8381526111a08686610a91565b6020820152604081018390526000546111b882610feb565b149695505050505050565b60006111cd6114fc565b8281526111da8585610a91565b60208201526000546111eb82610ab6565b1495945050505050565b336112277f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146107555760405163118cdaa760e01b8152336004820152602401611164565b600080826001600160a01b0316634909229f6040518163ffffffff1660e01b81526004016040805180830381865afa158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b49190611c8d565b909250905060006112c58342612195565b90508181116112e757604051635c3017c560e11b815260040160405180910390fd5b50505050565b6000806112fb600587611d5d565b9050849150600061130a61151a565b60005b8960ff168160ff1610156114175760005b60058160ff1610156113e157848160ff16036113545785838260ff166005811061134a5761134a611abd565b60200201526113d1565b848160ff1611156113715761136a6001826121a8565b9350611375565b8093505b87878360ff1681811061138a5761138a611abd565b905060200281019061139c91906121c1565b8560ff168181106113af576113af611abd565b90506020020135838260ff16600581106113cb576113cb611abd565b60200201525b6113da81612212565b905061131e565b506113ed60058a612146565b98506113fa60058a611d5d565b935061140582610e63565b945061141081612212565b905061130d565b5050505095945050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661075557604051631afcd79f60e31b815260040160405180910390fd5b60405180606001604052806003906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b6001600160a01b038116811461117657600080fd5b600080600080600060a0868803121561156557600080fd5b853561157081611538565b9450602086013561158081611538565b9350604086013561159081611538565b925060608601356115a081611538565b91506080860135600281106115b457600080fd5b809150509295509295909350565b600080600080608085870312156115d857600080fd5b5050823594602084013594506040840135936060013592509050565b8061010081018310156109f157600080fd5b600080610120838503121561161a57600080fd5b8235915061162b84602085016115f4565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6002811061166857634e487b7160e01b600052602160045260246000fd5b9052565b602081016109f1828461164a565b60ff8116811461117657600080fd5b80356116948161167a565b919050565b60008060008060008060008060e0898b0312156116b557600080fd5b8835975060208901359650604089013567ffffffffffffffff808211156116db57600080fd5b818b0191508b601f8301126116ef57600080fd5b8135818111156116fe57600080fd5b8c60208260051b850101111561171357600080fd5b6020830198508097505050506060890135935061173260808a01611689565b925060a0890135915060c089013590509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156117885761178861174f565b60405290565b60405160a0810167ffffffffffffffff811182821017156117885761178861174f565b604051601f8201601f1916810167ffffffffffffffff811182821017156117da576117da61174f565b604052919050565b6000608082840312156117f457600080fd5b82601f83011261180357600080fd5b6040516080810181811067ffffffffffffffff821117156118265761182661174f565b60405280608084018581111561183b57600080fd5b845b8181101561185557803583526020928301920161183d565b509195945050505050565b600067ffffffffffffffff82111561187a5761187a61174f565b5060051b60200190565b6000602080838503121561189757600080fd5b823567ffffffffffffffff8111156118ae57600080fd5b8301601f810185136118bf57600080fd5b80356118d26118cd82611860565b6117b1565b81815260059190911b820183019083810190878311156118f157600080fd5b928401925b82841015610bb2578335825292840192908401906118f6565b6000806040838503121561192257600080fd5b50508035926020909101359150565b60006040828403121561194357600080fd5b82601f83011261195257600080fd5b61195a611765565b80604084018581111561196c57600080fd5b845b8181101561198657803584526020938401930161196e565b509095945050505050565b600080600080600061018086880312156119aa57600080fd5b6119b487876115f4565b9761010087013597506101208701359661014081013596506101600135945092505050565b600060a082840312156119eb57600080fd5b82601f8301126119fa57600080fd5b611a0261178e565b8060a084018581111561196c57600080fd5b600080600060608486031215611a2957600080fd5b505081359360208301359350604090920135919050565b600060608284031215611a5257600080fd5b82601f830112611a6157600080fd5b6040516060810181811067ffffffffffffffff82111715611a8457611a8461174f565b60405280606084018581111561183b57600080fd5b600060208284031215611aab57600080fd5b8135611ab681611538565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ae557600080fd5b81518015158114611ab657600080fd5b600060208284031215611b0757600080fd5b5051919050565b60008060008060808587031215611b2457600080fd5b8451611b2f8161167a565b6020860151909450611b408161167a565b6040860151909350611b518161167a565b6060860151909250611b628161167a565b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611bbe578160001904821115611ba457611ba4611b6d565b80851615611bb157918102915b93841c9390800290611b88565b509250929050565b600082611bd5575060016109f1565b81611be2575060006109f1565b8160018114611bf85760028114611c0257611c1e565b60019150506109f1565b60ff841115611c1357611c13611b6d565b50506001821b6109f1565b5060208310610133831016604e8410600b8410161715611c41575081810a6109f1565b611c4b8383611b83565b8060001904821115611c5f57611c5f611b6d565b029392505050565b6000611ab660ff841683611bc6565b80820281158282048414176109f1576109f1611b6d565b60008060408385031215611ca057600080fd5b505080516020909101519092909150565b60808101818360005b6004811015611cd9578151835260209283019290910190600101611cba565b50505092915050565b815160009082906020808601845b83811015611d0c57815185529382019390820190600101611cf0565b50929695505050505050565b6000825160005b81811015611d395760208186018101518583015201611d1f565b506000920191825250919050565b634e487b7160e01b600052601260045260246000fd5b600082611d6c57611d6c611d47565b500690565b60408101818360005b6002811015611cd9578151835260209283019290910190600101611d7a565b600080600060608486031215611dae57600080fd5b8351611db981611538565b6020850151909350611dca81611538565b6040850151909250611ddb81611538565b809150509250925092565b600060208284031215611df857600080fd5b8151611ab68161167a565b60ff858116825284811660208301528316604082015260808101611e2a606083018461164a565b95945050505050565b600060408284031215611e4557600080fd5b611e4d611765565b9050815181526020820151602082015292915050565b600082601f830112611e7457600080fd5b611e7c611765565b806040840185811115611e8e57600080fd5b845b81811015611986578051845260209384019301611e90565b600060808284031215611eba57600080fd5b611ec2611765565b9050611ece8383611e63565b8152611edd8360408401611e63565b602082015292915050565b60006020808385031215611efb57600080fd5b825167ffffffffffffffff80821115611f1357600080fd5b908401906101e08287031215611f2857600080fd5b611f3061178e565b611f3a8784611e33565b81526040611f4a88828601611ea8565b85830152611f5b8860c08601611ea8565b81830152611f6d886101408601611ea8565b60608301526101c084015183811115611f8557600080fd5b80850194505087601f850112611f9a57600080fd5b83519250611faa6118cd84611860565b83815260069390931b84018501928581019089851115611fc957600080fd5b948601945b84861015611fef57611fe08a87611e33565b82529482019490860190611fce565b60808401525090979650505050505050565b8060005b60028110156112e7578151845260209384019390910190600101612005565b61202f828251612001565b60208101516120416040840182612001565b505050565b6000610140610100808785378181850152506103208301612074828501875180518252602090810151910152565b602091508186015161208a610180860182612024565b5060408087015161209f610200870182612024565b5060608701516120b3610280870182612024565b5060808701516101e06103008701528051928390528301916000906103408701905b80831015612106576120f282865180518252602090810151910152565b9385019360019290920191908301906120d5565b50809550505050505082610120830152949350505050565b60a08101818360005b6005811015611cd9578151835260209283019290910190600101612127565b60008261215557612155611d47565b500490565b808201808211156109f1576109f1611b6d565b60608101818360005b6003811015611cd9578151835260209283019290910190600101612176565b818103818111156109f1576109f1611b6d565b60ff82811682821603908111156109f1576109f1611b6d565b6000808335601e198436030181126121d857600080fd5b83018035915067ffffffffffffffff8211156121f357600080fd5b6020019150600581901b360382131561220b57600080fd5b9250929050565b600060ff821660ff810361222857612228611b6d565b6001019291505056fea2646970667358221220f70d1f2678aa8155575db191dd4e2aa8dbc01c57588ac07dd4d2a2bacb72400264736f6c63430008140033";

type ClonableTallyConstructorParams =
  | [linkLibraryAddresses: ClonableTallyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClonableTallyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ClonableTally__factory extends ContractFactory {
  constructor(...args: ClonableTallyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClonableTally__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClonableTallyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e61c65d9562aef5fa6ab22c0f787cf1e30\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1540826e134b1b69b7091c82576ee3aadd\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$46fbdf6658faf65265971bdad66851b86c\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fa059fb1da6d850ca47ea49359bfe89f78\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ClonableTally & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClonableTally__factory {
    return super.connect(runner) as ClonableTally__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClonableTallyInterface {
    return new Interface(_abi) as ClonableTallyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClonableTally {
    return new Contract(address, _abi, runner) as unknown as ClonableTally;
  }
}

export interface ClonableTallyLibraryAddresses {
  ["maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
