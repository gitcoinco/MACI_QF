/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../common";

export declare namespace Params {
  export type MaxValuesStruct = {
    maxMessages: BigNumberish;
    maxVoteOptions: BigNumberish;
  };

  export type MaxValuesStructOutput = [
    maxMessages: bigint,
    maxVoteOptions: bigint
  ] & { maxMessages: bigint; maxVoteOptions: bigint };

  export type TreeDepthsStruct = {
    intStateTreeDepth: BigNumberish;
    messageTreeSubDepth: BigNumberish;
    messageTreeDepth: BigNumberish;
    voteOptionTreeDepth: BigNumberish;
  };

  export type TreeDepthsStructOutput = [
    intStateTreeDepth: bigint,
    messageTreeSubDepth: bigint,
    messageTreeDepth: bigint,
    voteOptionTreeDepth: bigint
  ] & {
    intStateTreeDepth: bigint;
    messageTreeSubDepth: bigint;
    messageTreeDepth: bigint;
    voteOptionTreeDepth: bigint;
  };
}

export declare namespace DomainObjs {
  export type PubKeyStruct = { x: BigNumberish; y: BigNumberish };

  export type PubKeyStructOutput = [x: bigint, y: bigint] & {
    x: bigint;
    y: bigint;
  };
}

export interface PollFactoryInterface extends Interface {
  getFunction(
    nameOrSignature: "MESSAGE_DATA_LENGTH" | "deploy"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MESSAGE_DATA_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deploy",
    values: [
      BigNumberish,
      Params.MaxValuesStruct,
      Params.TreeDepthsStruct,
      DomainObjs.PubKeyStruct,
      AddressLike,
      AddressLike,
      AddressLike
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "MESSAGE_DATA_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deploy", data: BytesLike): Result;
}

export interface PollFactory extends BaseContract {
  connect(runner?: ContractRunner | null): PollFactory;
  waitForDeployment(): Promise<this>;

  interface: PollFactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  MESSAGE_DATA_LENGTH: TypedContractMethod<[], [bigint], "view">;

  deploy: TypedContractMethod<
    [
      _duration: BigNumberish,
      _maxValues: Params.MaxValuesStruct,
      _treeDepths: Params.TreeDepthsStruct,
      _coordinatorPubKey: DomainObjs.PubKeyStruct,
      _maci: AddressLike,
      _topupCredit: AddressLike,
      _pollOwner: AddressLike
    ],
    [string],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "MESSAGE_DATA_LENGTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "deploy"
  ): TypedContractMethod<
    [
      _duration: BigNumberish,
      _maxValues: Params.MaxValuesStruct,
      _treeDepths: Params.TreeDepthsStruct,
      _coordinatorPubKey: DomainObjs.PubKeyStruct,
      _maci: AddressLike,
      _topupCredit: AddressLike,
      _pollOwner: AddressLike
    ],
    [string],
    "nonpayable"
  >;

  filters: {};
}
