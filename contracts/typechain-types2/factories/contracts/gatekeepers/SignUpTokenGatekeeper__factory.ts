/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  SignUpTokenGatekeeper,
  SignUpTokenGatekeeperInterface,
} from "../../../contracts/gatekeepers/SignUpTokenGatekeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract SignUpToken",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMACI",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "maci",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredTokenIds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_maci",
        type: "address",
      },
    ],
    name: "setMaciInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract SignUpToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051610623380380610623833981016040819052610022916100c7565b338061004857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005181610077565b50600180546001600160a01b0319166001600160a01b03929092169190911790556100f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d957600080fd5b81516001600160a01b03811681146100f057600080fd5b9392505050565b61051d806101066000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed578063ca47cdc2146100fe578063f2fde38b14610131578063fc0c546a1461014457600080fd5b806313e65cf31461008d57806324b8fbf6146100a257806334a0922c146100b5578063715018a6146100e5575b600080fd5b6100a061009b36600461039a565b610157565b005b6100a06100b03660046103d4565b610181565b6002546100c8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06102b1565b6000546001600160a01b03166100c8565b61012161010c366004610498565b60036020526000908152604090205460ff1681565b60405190151581526020016100dc565b6100a061013f36600461039a565b6102c5565b6001546100c8906001600160a01b031681565b61015f610308565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146101ac57604051630346d90560e21b815260040160405180910390fd5b6000818060200190518101906101c291906104b1565b6001546040516331a9108f60e11b8152600481018390529192506000916001600160a01b03868116921690636352211e90602401602060405180830381865afa158015610213573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023791906104ca565b6001600160a01b031614905080610261576040516359dc379f60e01b815260040160405180910390fd5b60008281526003602052604090205460ff16801561029257604051630ea075bf60e21b815260040160405180910390fd5b50506000908152600360205260409020805460ff191660011790555050565b6102b9610308565b6102c36000610335565b565b6102cd610308565b6001600160a01b0381166102fc57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61030581610335565b50565b6000546001600160a01b031633146102c35760405163118cdaa760e01b81523360048201526024016102f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461030557600080fd5b6000602082840312156103ac57600080fd5b81356103b781610385565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156103e757600080fd5b82356103f281610385565b9150602083013567ffffffffffffffff8082111561040f57600080fd5b818501915085601f83011261042357600080fd5b813581811115610435576104356103be565b604051601f8201601f19908116603f0116810190838211818310171561045d5761045d6103be565b8160405282815288602084870101111561047657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156104aa57600080fd5b5035919050565b6000602082840312156104c357600080fd5b5051919050565b6000602082840312156104dc57600080fd5b81516103b78161038556fea26469706673582212206653231ec4c355b0d318a8afa4d96bb4d5566dfb1bfc55b6bbb5654de8538ded64736f6c63430008140033";

type SignUpTokenGatekeeperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignUpTokenGatekeeperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignUpTokenGatekeeper__factory extends ContractFactory {
  constructor(...args: SignUpTokenGatekeeperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      SignUpTokenGatekeeper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SignUpTokenGatekeeper__factory {
    return super.connect(runner) as SignUpTokenGatekeeper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignUpTokenGatekeeperInterface {
    return new Interface(_abi) as SignUpTokenGatekeeperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignUpTokenGatekeeper {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignUpTokenGatekeeper;
  }
}
