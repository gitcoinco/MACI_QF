/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  HatsGatekeeperMultiple,
  HatsGatekeeperMultipleInterface,
} from "../../../contracts/gatekeepers/HatsGatekeeperMultiple";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hats",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_criterionHats",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCriterionHat",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWearingCriterionHat",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMACI",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "criterionHat",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hats",
    outputs: [
      {
        internalType: "contract IHats",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maci",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_maci",
        type: "address",
      },
    ],
    name: "setMaciInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260405161084a38038061084a8339810160408190526100229161012f565b81338061004957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610052816100c9565b506001600160a01b031660805260005b81518110156100c1576001600360008484815181106100835761008361020f565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550806100ba90610225565b9050610062565b50505061024c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561014257600080fd5b82516001600160a01b038116811461015957600080fd5b602084810151919350906001600160401b038082111561017857600080fd5b818601915086601f83011261018c57600080fd5b81518181111561019e5761019e610119565b8060051b604051601f19603f830116810181811085821117156101c3576101c3610119565b6040529182528482019250838101850191898311156101e157600080fd5b938501935b828510156101ff578451845293850193928501926101e6565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006001820161024557634e487b7160e01b600052601160045260246000fd5b5060010190565b6080516105dc61026e6000396000818161015401526102d901526105dc6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100f8578063b2dd5c0714610109578063f2fde38b1461013c578063f99f02381461014f578063fb01269b1461017657600080fd5b806313e65cf31461009857806324b8fbf6146100ad57806334a0922c146100c0578063715018a6146100f0575b600080fd5b6100ab6100a6366004610458565b610199565b005b6100ab6100bb366004610490565b6101ea565b6001546100d3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab610368565b6000546001600160a01b03166100d3565b61012c610117366004610458565b60026020526000908152604090205460ff1681565b60405190151581526020016100e7565b6100ab61014a366004610458565b61037c565b6100d37f000000000000000000000000000000000000000000000000000000000000000081565b61012c610184366004610552565b60036020526000908152604090205460ff1681565b6101a16103bf565b6001600160a01b0381166101c85760405163d92e233d60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461021557604051630346d90560e21b815260040160405180910390fd5b6001600160a01b03821660009081526002602052604090205460ff161561024f57604051630ea075bf60e21b815260040160405180910390fd5b600081806020019051810190610265919061056b565b60008181526003602052604090205490915060ff1661029757604051632f76bd0160e21b815260040160405180910390fd5b6001600160a01b0383811660008181526002602052604090819020805460ff19166001179055516321a9204d60e11b81526004810191909152602481018390527f000000000000000000000000000000000000000000000000000000000000000090911690634352409a90604401602060405180830381865afa158015610322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103469190610584565b610363576040516306fdb0d360e31b815260040160405180910390fd5b505050565b6103706103bf565b61037a60006103ec565b565b6103846103bf565b6001600160a01b0381166103b357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103bc816103ec565b50565b6000546001600160a01b0316331461037a5760405163118cdaa760e01b81523360048201526024016103aa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461045357600080fd5b919050565b60006020828403121561046a57600080fd5b6104738261043c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104a357600080fd5b6104ac8361043c565b9150602083013567ffffffffffffffff808211156104c957600080fd5b818501915085601f8301126104dd57600080fd5b8135818111156104ef576104ef61047a565b604051601f8201601f19908116603f011681019083821181831017156105175761051761047a565b8160405282815288602084870101111561053057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561056457600080fd5b5035919050565b60006020828403121561057d57600080fd5b5051919050565b60006020828403121561059657600080fd5b8151801515811461047357600080fdfea2646970667358221220f1edf44a35b903b1eebf09c5b11e6bb83bf0198b8d5917aad4ae3147bf60f5fe64736f6c63430008140033";

type HatsGatekeeperMultipleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HatsGatekeeperMultipleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HatsGatekeeperMultiple__factory extends ContractFactory {
  constructor(...args: HatsGatekeeperMultipleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _hats: AddressLike,
    _criterionHats: BigNumberish[],
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_hats, _criterionHats, overrides || {});
  }
  override deploy(
    _hats: AddressLike,
    _criterionHats: BigNumberish[],
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_hats, _criterionHats, overrides || {}) as Promise<
      HatsGatekeeperMultiple & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): HatsGatekeeperMultiple__factory {
    return super.connect(runner) as HatsGatekeeperMultiple__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HatsGatekeeperMultipleInterface {
    return new Interface(_abi) as HatsGatekeeperMultipleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HatsGatekeeperMultiple {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HatsGatekeeperMultiple;
  }
}
