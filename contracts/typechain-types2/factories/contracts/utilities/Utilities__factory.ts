/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Utilities,
  UtilitiesInterface,
} from "../../../contracts/utilities/Utilities";

const _abi = [
  {
    inputs: [],
    name: "InvalidMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "MESSAGE_DATA_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "hashMessageAndEncPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "msgHash",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct DomainObjs.PubKey",
            name: "pubKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "voiceCreditBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.StateLeaf",
        name: "_stateLeaf",
        type: "tuple",
      },
    ],
    name: "hashStateLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "ciphertext",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "dataToPad",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "msgType",
        type: "uint256",
      },
    ],
    name: "padAndHashMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "padKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "msgHash",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bfc806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806362a361bb1161006657806362a361bb14610128578063683f3dc31461013b5780637d0a81c8146101555780639cfced9714610168578063bea140b31461017b57600080fd5b806306912d3c146100a3578063167fd483146100ce5780633dfb88b2146100ef57806358bfc379146101025780635bb9399514610115575b600080fd5b6100b66100b13660046106bf565b61018e565b6040516100c5939291906106ea565b60405180910390f35b6100e16100dc36600461076d565b61023c565b6040519081526020016100c5565b6100e16100fd366004610807565b610315565b6100e1610110366004610885565b610396565b6100e161012336600461092b565b610430565b6100e161013636600461094d565b610455565b610143600a81565b60405160ff90911681526020016100c5565b6100e1610163366004610969565b61048f565b6100e16101763660046109cb565b6104cf565b6100e1610189366004610a24565b610509565b610196610543565b604080518082019091526000808252602082015260006101b4610562565b85518152602080870151828201526040805180820182527f171e826ad4a870fd925e0bf0e87884e70e080879c2205ef10114f28a3b6f6dd781527f2bd407d897fbbca9f88adfd2d15252e69de8c1564eb4d3d27162e259172f1a1d81840152815180830190925287825291810183905294509250610232848461023c565b9150509250925092565b6000610246610581565b602084810180515183528051820151918301919091528051604090810151908301528051606090810151908301525160809081015190820152610287610581565b6020858101805160a0908101518452815160c0015184840152815160e0015160408086019190915282516101000151606086015291516101200151608085015281519081019091528651815261030c9181016102e2856104cf565b81526020016102f0846104cf565b81526020018660000151815260200186602001518152506104cf565b95945050505050565b60405163248f667760e01b815260009073__$ce9c2c925f157047e54fa833ec4e61409f$__9063248f66779061034f908590600401610a7d565b602060405180830381865af415801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610aae565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016002836040516020016103cc9190610ac7565b60408051601f19818403018152908290526103e691610afd565b602060405180830381855afa158015610403573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104269190610aae565b6103909190610b2c565b600061043a61059f565b8381526020810183905261044d81610455565b949350505050565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f69061034f908590600401610b4e565b60006104996105bd565b82515181528251602090810151818301528301518160026020020152604083015160608201526104c881610315565b9392505050565b604051630926f44b60e31b815260009073__$20527677031d76601747626a9845039fe4$__90634937a2589061034f908590600401610b76565b6040516304b98e1d60e31b815260009073__$dc01a9744591ab014bc46a3b7671cdaefb$__906325cc70e89061034f908590600401610b9e565b60405180604001604052806000815260200161055d610562565b905290565b604051806101400160405280600a906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610614576106146105db565b60405290565b604051610140810167ffffffffffffffff81118282101715610614576106146105db565b604051601f8201601f1916810167ffffffffffffffff81118282101715610667576106676105db565b604052919050565b600082601f83011261068057600080fd5b6106886105f1565b80604084018581111561069a57600080fd5b845b818110156106b457803584526020938401930161069c565b509095945050505050565b600080606083850312156106d257600080fd5b6106dc848461066f565b946040939093013593505050565b835181526020808501516101c08301919081840160005b600a81101561071e57825182529183019190830190600101610701565b5050855161016085015250909301516101808201526101a00152919050565b60006040828403121561074f57600080fd5b6107576105f1565b9050813581526020820135602082015292915050565b6000808284036101a081121561078257600080fd5b6101608082121561079257600080fd5b61079a6105f1565b915084358252602086603f8701126107b157600080fd5b6107b961061a565b9186019180888411156107cb57600080fd5b8288015b848110156107e657803583529183019183016107cf565b5080838601525050508193506107fc868261073d565b925050509250929050565b60006080828403121561081957600080fd5b82601f83011261082857600080fd5b6040516080810181811067ffffffffffffffff8211171561084b5761084b6105db565b60405280608084018581111561086057600080fd5b845b8181101561087a578035835260209283019201610862565b509195945050505050565b6000602080838503121561089857600080fd5b823567ffffffffffffffff808211156108b057600080fd5b818501915085601f8301126108c457600080fd5b8135818111156108d6576108d66105db565b8060051b91506108e784830161063e565b818152918301840191848101908884111561090157600080fd5b938501935b8385101561091f57843582529385019390850190610906565b98975050505050505050565b6000806040838503121561093e57600080fd5b50508035926020909101359150565b60006040828403121561095f57600080fd5b6104c8838361066f565b60006080828403121561097b57600080fd5b6040516060810181811067ffffffffffffffff8211171561099e5761099e6105db565b6040526109ab848461073d565b815260408301356020820152606083013560408201528091505092915050565b600060a082840312156109dd57600080fd5b82601f8301126109ec57600080fd5b60405160a0810181811067ffffffffffffffff82111715610a0f57610a0f6105db565b6040528060a084018581111561086057600080fd5b600060608284031215610a3657600080fd5b82601f830112610a4557600080fd5b6040516060810181811067ffffffffffffffff82111715610a6857610a686105db565b60405280606084018581111561086057600080fd5b60808101818360005b6004811015610aa5578151835260209283019290910190600101610a86565b50505092915050565b600060208284031215610ac057600080fd5b5051919050565b815160009082906020808601845b83811015610af157815185529382019390820190600101610ad5565b50929695505050505050565b6000825160005b81811015610b1e5760208186018101518583015201610b04565b506000920191825250919050565b600082610b4957634e487b7160e01b600052601260045260246000fd5b500690565b60408101818360005b6002811015610aa5578151835260209283019290910190600101610b57565b60a08101818360005b6005811015610aa5578151835260209283019290910190600101610b7f565b60608101818360005b6003811015610aa5578151835260209283019290910190600101610ba756fea26469706673582212209ddae45e513d120cab1c58e9f4e9fee24dfd9a73fbd73e19e813ff1eff62a45664736f6c63430008140033";

type UtilitiesConstructorParams =
  | [linkLibraryAddresses: UtilitiesLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilitiesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Utilities__factory extends ContractFactory {
  constructor(...args: UtilitiesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Utilities__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: UtilitiesLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ce9c2c925f157047e54fa833ec4e61409f\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT5.sol:PoseidonT5"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6574937f64fc1d7710ec0e28b7a36713bb\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$20527677031d76601747626a9845039fe4\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT6.sol:PoseidonT6"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dc01a9744591ab014bc46a3b7671cdaefb\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT4.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Utilities & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Utilities__factory {
    return super.connect(runner) as Utilities__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilitiesInterface {
    return new Interface(_abi) as UtilitiesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Utilities {
    return new Contract(address, _abi, runner) as unknown as Utilities;
  }
}

export interface UtilitiesLibraryAddresses {
  ["contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
