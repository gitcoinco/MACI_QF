/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Poll,
  PollInterface,
  Params,
  DomainObjs,
} from "../../contracts/Poll";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxMessages",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVoteOptions",
            type: "uint256",
          },
        ],
        internalType: "struct Params.MaxValues",
        name: "_maxValues",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "intStateTreeDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "messageTreeSubDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "messageTreeDepth",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "voteOptionTreeDepth",
            type: "uint8",
          },
        ],
        internalType: "struct Params.TreeDepths",
        name: "_treeDepths",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_coordinatorPubKey",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IMACI",
            name: "maci",
            type: "address",
          },
          {
            internalType: "contract AccQueue",
            name: "messageAq",
            type: "address",
          },
          {
            internalType: "contract TopupCredit",
            name: "topupCredit",
            type: "address",
          },
        ],
        internalType: "struct Params.ExtContracts",
        name: "_extContracts",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidBatchLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "MaciPubKeyLargerThanSnarkFieldSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PollAlreadyInit",
    type: "error",
  },
  {
    inputs: [],
    name: "StateAqAlreadyMerged",
    type: "error",
  },
  {
    inputs: [],
    name: "StateAqSubtreesNeedMerge",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyMessages",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodOver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_stateRoot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_numSignups",
        type: "uint256",
      },
    ],
    name: "MergeMaciStateAq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "MergeMaciStateAqSubRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_messageRoot",
        type: "uint256",
      },
    ],
    name: "MergeMessageAq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "MergeMessageAqSubRoots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        indexed: false,
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "PublishMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        indexed: false,
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "TopupMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "MESSAGE_DATA_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "coordinatorPubKeyHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extContracts",
    outputs: [
      {
        internalType: "contract IMACI",
        name: "maci",
        type: "address",
      },
      {
        internalType: "contract AccQueue",
        name: "messageAq",
        type: "address",
      },
      {
        internalType: "contract TopupCredit",
        name: "topupCredit",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeployTimeAndDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "pollDeployTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "hashMessageAndEncPubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "msgHash",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct DomainObjs.PubKey",
            name: "pubKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "voiceCreditBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.StateLeaf",
        name: "_stateLeaf",
        type: "tuple",
      },
    ],
    name: "hashStateLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "ciphertext",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxValues",
    outputs: [
      {
        internalType: "uint256",
        name: "maxMessages",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVoteOptions",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "mergeMaciStateAq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "mergeMaciStateAqSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mergeMessageAq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSrQueueOps",
        type: "uint256",
      },
    ],
    name: "mergeMessageAqSubRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mergedStateRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numSignUpsAndMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "numSUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numMsgs",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numSignups",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "dataToPad",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "msgType",
        type: "uint256",
      },
    ],
    name: "padAndHashMessage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "padKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "msgHash",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message",
        name: "_message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "_encPubKey",
        type: "tuple",
      },
    ],
    name: "publishMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "msgType",
            type: "uint256",
          },
          {
            internalType: "uint256[10]",
            name: "data",
            type: "uint256[10]",
          },
        ],
        internalType: "struct DomainObjs.Message[]",
        name: "_messages",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey[]",
        name: "_encPubKeys",
        type: "tuple[]",
      },
    ],
    name: "publishMessageBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "stateAqMerged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "topup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeDepths",
    outputs: [
      {
        internalType: "uint8",
        name: "intStateTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "messageTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526040516200254138038062002541833981016040819052620000269162000478565b33806200004d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000588162000265565b507f0e8c0be063e1dee5a8a9df19f0715acdfac6b7260f41d6c3769166cac049db776001557f142181123bdf04edceb703cda229ba08b79092aad0eada9552d51966ee46229a6002557f20c99bb8b43cd63ee07ee8f33b445888ff638f67a7019b6d50036352a0e5e7bd6003557f1a999f92e772c387eb618ff2864256f26f268addaca43c88af7f8fab56ee19e76004557f0b81b4da4b6b26de7e3997b3c2eb68abb7573206ae5de5b964de736ee40022ab60055581517f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000011115806200016257507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826020015110155b1562000181576040516354be831760e11b815260040160405180910390fd5b81516007819055602083015160088190556200019e9190620002b5565b6080528051601180546001600160a01b039283166001600160a01b03199182161790915560208084015160128054918516918416919091179055604093840151601380549190941692169190911790915560c0959095528351600e5592840151600f5550805160108054948301519383015160609093015160ff90811663010000000263ff0000001994821662010000029490941663ffff0000199582166101000261ffff1990971691909316179490941792909216919091171790554260a052620005da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620002c162000364565b83815260208101839052620002d681620002de565b949350505050565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f6906200031a9085906004016200058d565b602060405180830381865af415801562000338573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035e9190620005c0565b92915050565b60405180604001604052806002906020820280368337509192915050565b604051608081016001600160401b0381118282101715620003b357634e487b7160e01b600052604160045260246000fd5b60405290565b604051606081016001600160401b0381118282101715620003b357634e487b7160e01b600052604160045260246000fd5b600060408284031215620003fd57600080fd5b604080519081016001600160401b03811182821017156200042e57634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b805160ff811681146200045a57600080fd5b919050565b6001600160a01b03811681146200047557600080fd5b50565b60008060008060008587036101808112156200049357600080fd5b86519550620004a68860208901620003ea565b94506080605f1982011215620004bb57600080fd5b620004c562000382565b620004d36060890162000448565b8152620004e36080890162000448565b6020820152620004f660a0890162000448565b60408201526200050960c0890162000448565b606082015293506200051f8860e08901620003ea565b9250606061011f19820112156200053557600080fd5b5062000540620003b9565b61012087015162000551816200045f565b815261014087015162000564816200045f565b60208201526101608701516200057a816200045f565b6040820152949793965091945092919050565b60408101818360005b6002811015620005b757815183526020928301929091019060010162000596565b50505092915050565b600060208284031215620005d357600080fd5b5051919050565b60805160a05160c051611ee36200065e600039600081816102e70152818161056301528181610805015281816109f001528181610e2201528181610f51015261108e0152600081816102c60152818161053a015281816107dc015281816109c701528181610df901528181610f280152611065015260006103b80152611ee36000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c8063715018a61161011a578063ac98e5df116100ad578063bea140b31161007c578063bea140b3146104eb578063c17268d9146104fe578063e1c7392a14610507578063f2fde38b1461050f578063fba630f21461052257600080fd5b8063ac98e5df1461041b578063ae93a21214610471578063b5f38c8114610484578063bc14ee2b146104a157600080fd5b80638aa0ba92116100e95780638aa0ba92146103b35780638da5cb5b146103da5780639c971729146103f55780639cfced971461040857600080fd5b8063715018a6146103725780637296aaea1461037a5780637d0a81c81461038d57806386f3c3f7146103a057600080fd5b80633dfb88b2116101925780635bb93995116101615780635bb93995146103295780635d5909dd1461033c57806362a361bb14610345578063683f3dc31461035857600080fd5b80633dfb88b2146102b15780634909229f146102c45780634f367f0f1461030b57806358bfc3791461031657600080fd5b8063167fd483116101ce578063167fd4831461026a578063184ff47f1461027d57806331e766a514610290578063394b78a21461029e57600080fd5b8062329f2f146101ff5780630396a0ce1461020957806306912d3c146102315780630f4cf69214610253575b600080fd5b61020761052b565b005b600e54600f54610217919082565b604080519283526020830191909152015b60405180910390f35b61024461023f3660046116e8565b61064e565b60405161022893929190611740565b61025c600c5481565b604051908152602001610228565b61025c610278366004611831565b6106fc565b61020761028b366004611868565b6107d5565b600754600854610217919082565b6102076102ac36600461188a565b6109c0565b61025c6102bf3660046118cd565b610b97565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610217565b600d54600c54610217565b61025c61032436600461194b565b610c18565b61025c610337366004611868565b610cb2565b61025c600d5481565b61025c6103533660046119f1565b610cd7565b610360600a81565b60405160ff9091168152602001610228565b610207610d11565b610207610388366004611a0d565b610d25565b61025c61039b366004611ad6565b610daa565b6102076103ae366004611868565b610dea565b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6000546040516001600160a01b039091168152602001610228565b610207610403366004611b38565b610f19565b61025c610416366004611b51565b61101c565b6010546104449060ff808216916101008104821691620100008204811691630100000090041684565b6040805160ff95861681529385166020850152918416918301919091529091166060820152608001610228565b61020761047f366004611b38565b611056565b600a546104919060ff1681565b6040519015158152602001610228565b6011546012546013546104c1926001600160a01b03908116928116911683565b604080516001600160a01b0394851681529284166020840152921691810191909152606001610228565b61025c6104f9366004611baa565b611353565b61025c600b5481565b61020761138d565b61020761051d366004611c18565b6114b2565b61025c60095481565b6105336114f5565b600061055f7f000000000000000000000000000000000000000000000000000000000000000042611c4b565b90507f000000000000000000000000000000000000000000000000000000000000000081116105a157604051630931513d60e11b815260040160405180910390fd5b6012546010546040516324a47aeb60e01b81526201000090910460ff1660048201526000916001600160a01b0316906324a47aeb906024016020604051808303816000875af11580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c9190611c5e565b60405190915081907fc5624680ab5d50c84507f9e0dc2032163de2bda906ab8a661a53dd4d43bd5dc790600090a25050565b610656611572565b60408051808201909152600080825260208201526000610674611591565b85518152602080870151828201526040805180820182527f171e826ad4a870fd925e0bf0e87884e70e080879c2205ef10114f28a3b6f6dd781527f2bd407d897fbbca9f88adfd2d15252e69de8c1564eb4d3d27162e259172f1a1d818401528151808301909252878252918101839052945092506106f284846106fc565b9150509250925092565b60006107066115b0565b6020848101805151835280518201519183019190915280516040908101519083015280516060908101519083015251608090810151908201526107476115b0565b6020858101805160a0908101518452815160c0015184840152815160e001516040808601919091528251610100015160608601529151610120015160808501528151908101909152865181526107cc9181016107a28561101c565b81526020016107b08461101c565b815260200186600001518152602001866020015181525061101c565b95945050505050565b60006108017f000000000000000000000000000000000000000000000000000000000000000042611c4b565b90507f000000000000000000000000000000000000000000000000000000000000000081106108435760405163148fb9a960e31b815260040160405180910390fd5b600e54600c541061086757604051631ec0b2f760e01b815260040160405180910390fd5b600c805460010190556013546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611c8d565b506108f46115ce565b8381526020810183905260008061090c83600261064e565b601254604051631ffc735d60e01b8152600481018390529395509093506001600160a01b031691631ffc735d91506024016020604051808303816000875af115801561095c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109809190611c5e565b507f935afc7bb7cc33eb3e24e20dcfc75f5b21fa58e9c82cca06435238efaf9a3a58826040516109b09190611caf565b60405180910390a1505050505050565b60006109ec7f000000000000000000000000000000000000000000000000000000000000000042611c4b565b90507f00000000000000000000000000000000000000000000000000000000000000008110610a2e5760405163148fb9a960e31b815260040160405180910390fd5b600e54600c5410610a5257604051631ec0b2f760e01b815260040160405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018235101580610aa657507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826020013510155b15610ac4576040516354be831760e11b815260040160405180910390fd5b600c8054600190810190915583526000610ae78461027836869003860186611cbe565b601254604051631ffc735d60e01b8152600481018390529192506001600160a01b031690631ffc735d906024016020604051808303816000875af1158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b579190611c5e565b507fe2067f06dd7b8159b21a5490f8663f6bb031d9b35ed6d298b5489674cb9cda4b8484604051610b89929190611cda565b60405180910390a150505050565b60405163248f667760e01b815260009073__$ce9c2c925f157047e54fa833ec4e61409f$__9063248f667790610bd1908590600401611d03565b602060405180830381865af4158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c129190611c5e565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001600283604051602001610c4e9190611d34565b60408051601f1981840301815290829052610c6891611d6a565b602060405180830381855afa158015610c85573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ca89190611c5e565b610c129190611d99565b6000610cbc6115ce565b83815260208101839052610ccf81610cd7565b949350505050565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f690610bd1908590600401611dbb565b610d196114f5565b610d236000611522565b565b828114610d455760405163ca3487f760e01b815260040160405180910390fd5b8260005b81811015610da257610d9a868683818110610d6657610d66611c77565b90506101600201803603810190610d7d9190611de3565b858584818110610d8f57610d8f611c77565b9050604002016109c0565b600101610d49565b505050505050565b6000610db46115ec565b8251518152825160209081015181830152830151816002602002015260408301516060820152610de381610b97565b9392505050565b610df26114f5565b6000610e1e7f000000000000000000000000000000000000000000000000000000000000000042611c4b565b90507f00000000000000000000000000000000000000000000000000000000000000008111610e6057604051630931513d60e11b815260040160405180910390fd5b600a5460ff1615610e845760405163084ef7b960e41b815260040160405180910390fd5b60115460405163cfa1fa0360e01b815260048101859052602481018490526001600160a01b039091169063cfa1fa0390604401600060405180830381600087803b158015610ed157600080fd5b505af1158015610ee5573d6000803e3d6000fd5b50506040518592507fbe5eae95ff0a9a2779506ae62da06dda1e349311d3f2b6ceb990ea42b6a5f20b9150600090a2505050565b610f216114f5565b6000610f4d7f000000000000000000000000000000000000000000000000000000000000000042611c4b565b90507f00000000000000000000000000000000000000000000000000000000000000008111610f8f57604051630931513d60e11b815260040160405180910390fd5b60125460405163c15da65b60e01b8152600481018490526001600160a01b039091169063c15da65b90602401600060405180830381600087803b158015610fd557600080fd5b505af1158015610fe9573d6000803e3d6000fd5b50506040518492507f1245b881cb30fdad22b2f9fde2d5c2a3605bbdf272d5e8a2235d8c9e81aba2ce9150600090a25050565b604051630926f44b60e31b815260009073__$20527677031d76601747626a9845039fe4$__90634937a25890610bd1908590600401611e00565b61105e6114f5565b600061108a7f000000000000000000000000000000000000000000000000000000000000000042611c4b565b90507f000000000000000000000000000000000000000000000000000000000000000081116110cc57604051630931513d60e11b815260040160405180910390fd5b600a5460ff16156110f05760405163084ef7b960e41b815260040160405180910390fd5b600a805460ff1916600117905560115460408051630c0775ff60e31b815290516001600160a01b039092169163603baff8916004808201926020929091908290030181865afa158015611147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116b9190611e28565b6001600160a01b031663b6a64acd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cc9190611c8d565b6111e857604051624a03c360e31b815260040160405180910390fd5b60115460405163dd0982a360e01b8152600481018490526001600160a01b039091169063dd0982a3906024016020604051808303816000875af1158015611233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112579190611c5e565b60095561126261160a565b60095481526010546001906112829082906301000000900460ff16611e45565b60ff166005811061129557611295611c77565b01546020820152600060408201526112ac81611353565b600b556011546040805163122db15360e01b815290516001600160a01b039092169163122db153916004808201926020929091908290030181865afa1580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d9190611c5e565b600d8190556009546040517fa80928657383ff9d374f1409cf51e7460a64472b6baeb5ded1199830c15bae0190600090a3505050565b6040516304b98e1d60e31b815260009073__$dc01a9744591ab014bc46a3b7671cdaefb$__906325cc70e890610bd1908590600401611e5e565b60065460ff16156113b1576040516342a2e18d60e01b815260040160405180910390fd5b6006805460ff19166001908117909155600c805490910190556113d26115ce565b7f12817f4161f2f5ded33f26c55735a77e80e4f8975483c8c2704745128417f7118152600060208201819052808061140b84600161064e565b601254604051631ffc735d60e01b81526004810183905293965091945092506001600160a01b031690631ffc735d906024016020604051808303816000875af115801561145c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114809190611c5e565b507fe2067f06dd7b8159b21a5490f8663f6bb031d9b35ed6d298b5489674cb9cda4b8383604051610b89929190611e86565b6114ba6114f5565b6001600160a01b0381166114e957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6114f281611522565b50565b6000546001600160a01b03163314610d235760405163118cdaa760e01b81523360048201526024016114e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180604001604052806000815260200161158c611591565b905290565b604051806101400160405280600a906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561166157611661611628565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561169057611690611628565b604052919050565b600082601f8301126116a957600080fd5b6116b161163e565b8060408401858111156116c357600080fd5b845b818110156116dd5780358452602093840193016116c5565b509095945050505050565b600080606083850312156116fb57600080fd5b6117058484611698565b946040939093013593505050565b8051825260208082015181840160005b600a811015610da257825182529183019190830190600101611723565b6101c0810161174f8286611713565b83516101608301526020909301516101808201526101a00152919050565b600061016080838503121561178157600080fd5b61178961163e565b915082358252602084603f8501126117a057600080fd5b604051610140810181811067ffffffffffffffff821117156117c4576117c4611628565b6040529184019180868411156117d957600080fd5b8286015b848110156117f457803582529083019083016117dd565b5050908301525092915050565b60006040828403121561181357600080fd5b61181b61163e565b9050813581526020820135602082015292915050565b6000806101a0838503121561184557600080fd5b61184f848461176d565b915061185f846101608501611801565b90509250929050565b6000806040838503121561187b57600080fd5b50508035926020909101359150565b6000808284036101a081121561189f57600080fd5b6118a9858561176d565b9250604061015f19820112156118be57600080fd5b50610160830190509250929050565b6000608082840312156118df57600080fd5b82601f8301126118ee57600080fd5b6040516080810181811067ffffffffffffffff8211171561191157611911611628565b60405280608084018581111561192657600080fd5b845b81811015611940578035835260209283019201611928565b509195945050505050565b6000602080838503121561195e57600080fd5b823567ffffffffffffffff8082111561197657600080fd5b818501915085601f83011261198a57600080fd5b81358181111561199c5761199c611628565b8060051b91506119ad848301611667565b81815291830184019184810190888411156119c757600080fd5b938501935b838510156119e5578435825293850193908501906119cc565b98975050505050505050565b600060408284031215611a0357600080fd5b610de38383611698565b60008060008060408587031215611a2357600080fd5b843567ffffffffffffffff80821115611a3b57600080fd5b818701915087601f830112611a4f57600080fd5b813581811115611a5e57600080fd5b88602061016083028501011115611a7457600080fd5b602092830196509450908601359080821115611a8f57600080fd5b818701915087601f830112611aa357600080fd5b813581811115611ab257600080fd5b8860208260061b8501011115611ac757600080fd5b95989497505060200194505050565b600060808284031215611ae857600080fd5b6040516060810181811067ffffffffffffffff82111715611b0b57611b0b611628565b604052611b188484611801565b815260408301356020820152606083013560408201528091505092915050565b600060208284031215611b4a57600080fd5b5035919050565b600060a08284031215611b6357600080fd5b82601f830112611b7257600080fd5b60405160a0810181811067ffffffffffffffff82111715611b9557611b95611628565b6040528060a084018581111561192657600080fd5b600060608284031215611bbc57600080fd5b82601f830112611bcb57600080fd5b6040516060810181811067ffffffffffffffff82111715611bee57611bee611628565b60405280606084018581111561192657600080fd5b6001600160a01b03811681146114f257600080fd5b600060208284031215611c2a57600080fd5b8135610de381611c03565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c1257610c12611c35565b600060208284031215611c7057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c9f57600080fd5b81518015158114610de357600080fd5b6101608101610c128284611713565b600060408284031215611cd057600080fd5b610de38383611801565b6101a08101611ce98285611713565b823561016083015260208301356101808301529392505050565b60808101818360005b6004811015611d2b578151835260209283019290910190600101611d0c565b50505092915050565b815160009082906020808601845b83811015611d5e57815185529382019390820190600101611d42565b50929695505050505050565b6000825160005b81811015611d8b5760208186018101518583015201611d71565b506000920191825250919050565b600082611db657634e487b7160e01b600052601260045260246000fd5b500690565b60408101818360005b6002811015611d2b578151835260209283019290910190600101611dc4565b60006101608284031215611df657600080fd5b610de3838361176d565b60a08101818360005b6005811015611d2b578151835260209283019290910190600101611e09565b600060208284031215611e3a57600080fd5b8151610de381611c03565b60ff8281168282160390811115610c1257610c12611c35565b60608101818360005b6003811015611d2b578151835260209283019290910190600101611e67565b6101a08101611e958285611713565b82516101608301526020830151610180830152610de356fea2646970667358221220007109d4bf59d0251b8928c5529986ecdb3975428fa51c2d1988b0666a1b9ee664736f6c63430008140033";

type PollConstructorParams =
  | [linkLibraryAddresses: PollLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PollConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Poll__factory extends ContractFactory {
  constructor(...args: PollConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Poll__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: PollLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6574937f64fc1d7710ec0e28b7a36713bb\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ce9c2c925f157047e54fa833ec4e61409f\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT5.sol:PoseidonT5"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$20527677031d76601747626a9845039fe4\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT6.sol:PoseidonT6"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dc01a9744591ab014bc46a3b7671cdaefb\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT4.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _duration: BigNumberish,
    _maxValues: Params.MaxValuesStruct,
    _treeDepths: Params.TreeDepthsStruct,
    _coordinatorPubKey: DomainObjs.PubKeyStruct,
    _extContracts: Params.ExtContractsStruct,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _duration,
      _maxValues,
      _treeDepths,
      _coordinatorPubKey,
      _extContracts,
      overrides || {}
    );
  }
  override deploy(
    _duration: BigNumberish,
    _maxValues: Params.MaxValuesStruct,
    _treeDepths: Params.TreeDepthsStruct,
    _coordinatorPubKey: DomainObjs.PubKeyStruct,
    _extContracts: Params.ExtContractsStruct,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _duration,
      _maxValues,
      _treeDepths,
      _coordinatorPubKey,
      _extContracts,
      overrides || {}
    ) as Promise<
      Poll & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Poll__factory {
    return super.connect(runner) as Poll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PollInterface {
    return new Interface(_abi) as PollInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Poll {
    return new Contract(address, _abi, runner) as unknown as Poll;
  }
}

export interface PollLibraryAddresses {
  ["contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
