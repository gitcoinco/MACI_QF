/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  SignUpToken,
  SignUpTokenInterface,
} from "../../contracts/SignUpToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "curTokenId",
        type: "uint256",
      },
    ],
    name: "giveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x600b60808181526a29b4b3b72ab82a37b5b2b760a91b60a081905261010060405260c092835260e0523391600062000038838262000182565b50600162000047828262000182565b5050506001600160a01b0381166200007957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000084816200008b565b506200024e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010857607f821691505b6020821081036200012957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017d57600081815260208120601f850160051c81016020861015620001585750805b601f850160051c820191505b81811015620001795782815560010162000164565b5050505b505050565b81516001600160401b038111156200019e576200019e620000dd565b620001b681620001af8454620000f3565b846200012f565b602080601f831160018114620001ee5760008415620001d55750858301515b600019600386901b1c1916600185901b17855562000179565b600085815260208120601f198616915b828110156200021f57888601518255948401946001909101908401620001fe565b50858210156200023e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61109d806200025e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f2fde38b1461026757600080fd5b806370a08231146101d9578063715018a6146101fa5780638da5cb5b1461020257806395d89b411461021357600080fd5b8063193f974c116100de578063193f974c1461018d57806323b872dd146101a057806342842e0e146101b35780636352211e146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610d0d565b61027a565b60405190151581526020015b60405180910390f35b6101406102cc565b60405161012f9190610d7a565b61016061015b366004610d8d565b61035e565b6040516001600160a01b03909116815260200161012f565b61018b610186366004610dc2565b610387565b005b61018b61019b366004610dc2565b610396565b61018b6101ae366004610dec565b6103a8565b61018b6101c1366004610dec565b610438565b6101606101d4366004610d8d565b610458565b6101ec6101e7366004610e28565b610463565b60405190815260200161012f565b61018b6104ab565b6006546001600160a01b0316610160565b6101406104bf565b61018b610229366004610e43565b6104ce565b61018b61023c366004610e95565b6104d9565b61014061024f366004610d8d565b6104f0565b610123610262366004610f71565b610565565b61018b610275366004610e28565b610593565b60006001600160e01b031982166380ac58cd60e01b14806102ab57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102db90610fa4565b80601f016020809104026020016040519081016040528092919081815260200182805461030790610fa4565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b6000610369826105d1565b506000828152600460205260409020546001600160a01b03166102c6565b61039282823361060a565b5050565b61039e610617565b6103928282610644565b6001600160a01b0382166103d757604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103e48383336106a9565b9050836001600160a01b0316816001600160a01b031614610432576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103ce565b50505050565b610453838383604051806020016040528060008152506104d9565b505050565b60006102c6826105d1565b60006001600160a01b03821661048f576040516322718ad960e21b8152600060048201526024016103ce565b506001600160a01b031660009081526003602052604090205490565b6104b3610617565b6104bd60006107a2565b565b6060600180546102db90610fa4565b6103923383836107f4565b6104e48484846103a8565b61043284848484610893565b60606104fb826105d1565b50600061051360408051602081019091526000815290565b90506000815111610533576040518060200160405280600081525061055e565b8061053d846109bc565b60405160200161054e929190610fde565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61059b610617565b6001600160a01b0381166105c557604051631e4fbdf760e01b8152600060048201526024016103ce565b6105ce816107a2565b50565b6000818152600260205260408120546001600160a01b0316806102c657604051637e27328960e01b8152600481018490526024016103ce565b6104538383836001610a4f565b6006546001600160a01b031633146104bd5760405163118cdaa760e01b81523360048201526024016103ce565b6001600160a01b03821661066e57604051633250574960e11b8152600060048201526024016103ce565b600061067c838360006106a9565b90506001600160a01b03811615610453576040516339e3563760e11b8152600060048201526024016103ce565b6000828152600260205260408120546001600160a01b03908116908316156106d6576106d6818486610b55565b6001600160a01b03811615610714576106f3600085600080610a4f565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610743576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661082657604051630b61174360e31b81526001600160a01b03831660048201526024016103ce565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561043257604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108d590339088908790879060040161100d565b6020604051808303816000875af1925050508015610910575060408051601f3d908101601f1916820190925261090d9181019061104a565b60015b610979573d80801561093e576040519150601f19603f3d011682016040523d82523d6000602084013e610943565b606091505b50805160000361097157604051633250574960e11b81526001600160a01b03851660048201526024016103ce565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146109b557604051633250574960e11b81526001600160a01b03851660048201526024016103ce565b5050505050565b606060006109c983610bb9565b600101905060008167ffffffffffffffff8111156109e9576109e9610e7f565b6040519080825280601f01601f191660200182016040528015610a13576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a1d57509392505050565b8080610a6357506001600160a01b03821615155b15610b25576000610a73846105d1565b90506001600160a01b03831615801590610a9f5750826001600160a01b0316816001600160a01b031614155b8015610ab25750610ab08184610565565b155b15610adb5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103ce565b8115610b235783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b60838383610c91565b610453576001600160a01b038316610b8e57604051637e27328960e01b8152600481018290526024016103ce565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103ce565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610bf85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c24576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c4257662386f26fc10000830492506010015b6305f5e1008310610c5a576305f5e100830492506008015b6127108310610c6e57612710830492506004015b60648310610c80576064830492506002015b600a83106102c65760010192915050565b60006001600160a01b03831615801590610cef5750826001600160a01b0316846001600160a01b03161480610ccb5750610ccb8484610565565b80610cef57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b0319811681146105ce57600080fd5b600060208284031215610d1f57600080fd5b813561055e81610cf7565b60005b83811015610d45578181015183820152602001610d2d565b50506000910152565b60008151808452610d66816020860160208601610d2a565b601f01601f19169290920160200192915050565b60208152600061055e6020830184610d4e565b600060208284031215610d9f57600080fd5b5035919050565b80356001600160a01b0381168114610dbd57600080fd5b919050565b60008060408385031215610dd557600080fd5b610dde83610da6565b946020939093013593505050565b600080600060608486031215610e0157600080fd5b610e0a84610da6565b9250610e1860208501610da6565b9150604084013590509250925092565b600060208284031215610e3a57600080fd5b61055e82610da6565b60008060408385031215610e5657600080fd5b610e5f83610da6565b915060208301358015158114610e7457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610eab57600080fd5b610eb485610da6565b9350610ec260208601610da6565b925060408501359150606085013567ffffffffffffffff80821115610ee657600080fd5b818701915087601f830112610efa57600080fd5b813581811115610f0c57610f0c610e7f565b604051601f8201601f19908116603f01168101908382118183101715610f3457610f34610e7f565b816040528281528a6020848701011115610f4d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f8457600080fd5b610f8d83610da6565b9150610f9b60208401610da6565b90509250929050565b600181811c90821680610fb857607f821691505b602082108103610fd857634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610ff0818460208801610d2a565b835190830190611004818360208801610d2a565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061104090830184610d4e565b9695505050505050565b60006020828403121561105c57600080fd5b815161055e81610cf756fea2646970667358221220dbef30231490f3bbcb0d29d7523d23e61afba500dcf3acb45bd67ff3314803a864736f6c63430008140033";

type SignUpTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignUpTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignUpToken__factory extends ContractFactory {
  constructor(...args: SignUpTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SignUpToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SignUpToken__factory {
    return super.connect(runner) as SignUpToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignUpTokenInterface {
    return new Interface(_abi) as SignUpTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SignUpToken {
    return new Contract(address, _abi, runner) as unknown as SignUpToken;
  }
}
