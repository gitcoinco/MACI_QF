/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  MessageProcessor,
  MessageProcessorInterface,
} from "../../contracts/MessageProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vkRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poll",
        type: "address",
      },
      {
        internalType: "enum DomainObjs.Mode",
        name: "_mode",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BatchEndIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "CurrentMessageBatchIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessMessageProof",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxVoteOptionsTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageAqNotMerged",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMoreMessages",
    type: "error",
  },
  {
    inputs: [],
    name: "NumSignUpsTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "StateAqNotMerged",
    type: "error",
  },
  {
    inputs: [],
    name: "VkNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MESSAGE_DATA_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentMessageBatchIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currentMessageBatchIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numMessages",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    name: "genProcessMessagesPackedVals",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currentMessageBatchIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numMessages",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currentSbCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newSbCommitment",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    name: "genProcessMessagesPublicInputHash",
    outputs: [
      {
        internalType: "uint256",
        name: "inputHash",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mode",
    outputs: [
      {
        internalType: "enum DomainObjs.Mode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBatchesProcessed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poll",
    outputs: [
      {
        internalType: "contract IPoll",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newSbCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "processMessages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processingComplete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vkRegistry",
    outputs: [
      {
        internalType: "contract IVkRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610100604052604051620020603803806200206083398101604081905262000027916200011a565b33806200004e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200005981620000ad565b506001600160a01b0380851660a05283811660c05282166080528060018111156200008857620000886200017c565b60e08160018111156200009f576200009f6200017c565b815250505050505062000192565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011557600080fd5b919050565b600080600080608085870312156200013157600080fd5b6200013c85620000fd565b93506200014c60208601620000fd565b92506200015c60408601620000fd565b91506060850151600281106200017157600080fd5b939692955090935050565b634e487b7160e01b600052602160045260246000fd5b60805160a05160c05160e051611e326200022e600039600081816101a601526110cf01526000818161016701526110310152600081816101da015261116d0152600081816102cb01528181610347015281816103df015281816107400152818161079101528181610835015281816108d1015281816109f501528181610a8201528181610b9701528181610f0e0152610f950152611e326000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a11752791161007c578063a1175279146102c6578063b1a263d3146102ed578063bea140b314610300578063d13181b814610313578063d1849f481461031c578063f2fde38b1461032f57600080fd5b8063715018a61461026b5780637a38d18f146102755780638763d0c41461027e5780638da5cb5b146102a25780639cfced97146102b357600080fd5b80633dfb88b2116100ff5780633dfb88b21461020557806358bfc379146102185780635bb939951461022b57806362a361bb1461023e578063683f3dc31461025157600080fd5b80630cd3b91d1461013c57806313fb893214610162578063295a5212146101a15780632b7ac3f3146101d55780633d6528a1146101fc575b600080fd5b61014f61014a36600461124d565b610342565b6040519081526020015b60405180910390f35b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610159565b6101c87f000000000000000000000000000000000000000000000000000000000000000081565b60405161015991906112e2565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b61014f60025481565b61014f610213366004611383565b61056b565b61014f610226366004611425565b6105ec565b61014f6102393660046114bb565b610686565b61014f61024c3660046114dd565b6106ab565b610259600a81565b60405160ff9091168152602001610159565b6102736106e5565b005b61014f60015481565b60005461029290600160a01b900460ff1681565b6040519015158152602001610159565b6000546001600160a01b0316610189565b61014f6102c136600461153d565b6106f9565b6101897f000000000000000000000000000000000000000000000000000000000000000081565b6102736102fb366004611578565b610733565b61014f61030e366004611604565b610c6f565b61014f60035481565b61014f61032a36600461165d565b610ca9565b61027361033d3660046116c8565b610daa565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638aa0ba926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c791906116ec565b905060006103d88b8a8a8888610ca9565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634909229f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190611705565b60408051600680825260e08201909252929450909250600091906020820160c080368337019050509050838160008151811061049c5761049c611729565b60200260200101818152505084816001815181106104bc576104bc611729565b6020026020010181815250508c816002815181106104dc576104dc611729565b60200260200101818152505089816003815181106104fc576104fc611729565b602002602001018181525050888160048151811061051c5761051c611729565b60209081029190910101526105318284611755565b8160058151811061054457610544611729565b602002602001018181525050610559816105ec565b9e9d5050505050505050505050505050565b60405163248f667760e01b815260009073__$ce9c2c925f157047e54fa833ec4e61409f$__9063248f6677906105a5908590600401611768565b602060405180830381865af41580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e691906116ec565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016002836040516020016106229190611799565b60408051601f198184030181529082905261063c916117cf565b602060405180830381855afa158015610659573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061067c91906116ec565b6105e691906117fe565b6000610690611220565b838152602081018390526106a3816106ab565b949350505050565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f6906105a5908590600401611820565b6106ed610ded565b6106f76000610e1a565b565b604051630926f44b60e31b815260009073__$20527677031d76601747626a9845039fe4$__90634937a258906105a5908590600401611848565b61073b610ded565b6107647f0000000000000000000000000000000000000000000000000000000000000000610e6a565b600054600160a01b900460ff161561078f5760405163a7f0397560e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b5f38c816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108119190611870565b61082e57604051631bb80bef60e31b815260040160405180910390fd5b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190611892565b9350935093505060008360056108cb91906119d5565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561092d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095191906119e4565b50604051631b9b8aa760e01b815260ff87166004820152909250600091506001600160a01b03831690631b9b8aa790602401602060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c491906116ec565b9050806000036109e75760405163c0b868a560e01b815260040160405180910390fd5b600154600003610b5f5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c17268d96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7591906116ec565b90508060038190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f367f0f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190611705565b915060009050610b1186836117fe565b600283905590508115610b5b5780600003610b43578560026000828254610b389190611a31565b90915550610b5b9050565b8060026000828254610b559190611a31565b90915550505b5050505b610b73600254826003548b8a8a8a8e610f07565b610b935760405160016268f24f60e01b0319815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f367f0f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611705565b91505060006002541115610c3c578360026000828254610c369190611a31565b90915550505b610c64896002546001546001610c529190611755565b610c5c9088611a44565b8411156111e7565b505050505050505050565b6040516304b98e1d60e31b815260009073__$dc01a9744591ab014bc46a3b7671cdaefb$__906325cc70e8906105a5908590600401611a5b565b600080610cb78360056119d5565b90506000610cc68560056119d5565b90506000610cd4828a611755565b905086811115610ce15750855b600160321b8310610d055760405163df0dbdbd60e01b815260040160405180910390fd5b600160321b8810610d2957604051631805864f60e21b815260040160405180910390fd5b600160321b8910610d4d576040516328b2660560e21b815260040160405180910390fd5b600160321b8110610d71576040516309c5b7c360e21b815260040160405180910390fd5b609681901b60648a901b610d8960328b901b86611755565b610d939190611755565b610d9d9190611755565b9998505050505050505050565b610db2610ded565b6001600160a01b038116610de157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610dea81610e1a565b50565b6000546001600160a01b031633146106f75760405163118cdaa760e01b8152336004820152602401610dd8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826001600160a01b0316634909229f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610eaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ece9190611705565b90925090506000610edf8342611a31565b9050818111610f0157604051635c3017c560e11b815260040160405180910390fd5b50505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f367f0f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8d9190611705565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101591906119e4565b50509050600061102b8d8d86868f8f8f8e610342565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d88ff4f5846001600160a01b031663652c76e46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561109c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c09190611a83565b8b8b6110cd8f60056119d5565b7f00000000000000000000000000000000000000000000000000000000000000006040518663ffffffff1660e01b815260040161110e959493929190611aa0565b600060405180830381865afa15801561112b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111539190810190611b8d565b6040516308adcb2560e21b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322b72c94906111a6908a9085908790600401611ceb565b602060405180830381865afa1580156111c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105599190611870565b60038390556000805460ff60a01b1916600160a01b831515021781556002839055600180549161121683611de3565b9190505550505050565b60405180604001604052806002906020820280368337509192915050565b60ff81168114610dea57600080fd5b600080600080600080600080610100898b03121561126a57600080fd5b883597506020890135965060408901359550606089013594506080890135935060a0890135925060c089013561129f8161123e565b915060e08901356112af8161123e565b809150509295985092959890939650565b600281106112de57634e487b7160e01b600052602160045260246000fd5b9052565b602081016105e682846112c0565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611329576113296112f0565b60405290565b60405160a0810167ffffffffffffffff81118282101715611329576113296112f0565b604051601f8201601f1916810167ffffffffffffffff8111828210171561137b5761137b6112f0565b604052919050565b60006080828403121561139557600080fd5b82601f8301126113a457600080fd5b6040516080810181811067ffffffffffffffff821117156113c7576113c76112f0565b6040528060808401858111156113dc57600080fd5b845b818110156113f65780358352602092830192016113de565b509195945050505050565b600067ffffffffffffffff82111561141b5761141b6112f0565b5060051b60200190565b6000602080838503121561143857600080fd5b823567ffffffffffffffff81111561144f57600080fd5b8301601f8101851361146057600080fd5b803561147361146e82611401565b611352565b81815260059190911b8201830190838101908783111561149257600080fd5b928401925b828410156114b057833582529284019290840190611497565b979650505050505050565b600080604083850312156114ce57600080fd5b50508035926020909101359150565b6000604082840312156114ef57600080fd5b82601f8301126114fe57600080fd5b611506611306565b80604084018581111561151857600080fd5b845b8181101561153257803584526020938401930161151a565b509095945050505050565b600060a0828403121561154f57600080fd5b82601f83011261155e57600080fd5b61156661132f565b8060a084018581111561151857600080fd5b60008061012080848603121561158d57600080fd5b83359250602085603f8601126115a257600080fd5b604051610100810181811067ffffffffffffffff821117156115c6576115c66112f0565b6040529185019180878411156115db57600080fd5b8287015b848110156115f657803582529083019083016115df565b509497909650945050505050565b60006060828403121561161657600080fd5b82601f83011261162557600080fd5b6040516060810181811067ffffffffffffffff82111715611648576116486112f0565b6040528060608401858111156113dc57600080fd5b600080600080600060a0868803121561167557600080fd5b85359450602086013593506040860135925060608601356116958161123e565b915060808601356116a58161123e565b809150509295509295909350565b6001600160a01b0381168114610dea57600080fd5b6000602082840312156116da57600080fd5b81356116e5816116b3565b9392505050565b6000602082840312156116fe57600080fd5b5051919050565b6000806040838503121561171857600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105e6576105e661173f565b60808101818360005b6004811015611790578151835260209283019290910190600101611771565b50505092915050565b815160009082906020808601845b838110156117c3578151855293820193908201906001016117a7565b50929695505050505050565b6000825160005b818110156117f057602081860181015185830152016117d6565b506000920191825250919050565b60008261181b57634e487b7160e01b600052601260045260246000fd5b500690565b60408101818360005b6002811015611790578151835260209283019290910190600101611829565b60a08101818360005b6005811015611790578151835260209283019290910190600101611851565b60006020828403121561188257600080fd5b815180151581146116e557600080fd5b600080600080608085870312156118a857600080fd5b84516118b38161123e565b60208601519094506118c48161123e565b60408601519093506118d58161123e565b60608601519092506118e68161123e565b939692955090935050565b600181815b8085111561192c5781600019048211156119125761191261173f565b8085161561191f57918102915b93841c93908002906118f6565b509250929050565b600082611943575060016105e6565b81611950575060006105e6565b816001811461196657600281146119705761198c565b60019150506105e6565b60ff8411156119815761198161173f565b50506001821b6105e6565b5060208310610133831016604e8410600b84101617156119af575081810a6105e6565b6119b983836118f1565b80600019048211156119cd576119cd61173f565b029392505050565b60006116e560ff841683611934565b6000806000606084860312156119f957600080fd5b8351611a04816116b3565b6020850151909350611a15816116b3565b6040850151909250611a26816116b3565b809150509250925092565b818103818111156105e6576105e661173f565b80820281158282048414176105e6576105e661173f565b60608101818360005b6003811015611790578151835260209283019290910190600101611a64565b600060208284031215611a9557600080fd5b81516116e58161123e565b60ff86811682528581166020830152841660408201526060810183905260a08101611ace60808301846112c0565b9695505050505050565b600060408284031215611aea57600080fd5b611af2611306565b9050815181526020820151602082015292915050565b600082601f830112611b1957600080fd5b611b21611306565b806040840185811115611b3357600080fd5b845b81811015611532578051845260209384019301611b35565b600060808284031215611b5f57600080fd5b611b67611306565b9050611b738383611b08565b8152611b828360408401611b08565b602082015292915050565b60006020808385031215611ba057600080fd5b825167ffffffffffffffff80821115611bb857600080fd5b908401906101e08287031215611bcd57600080fd5b611bd561132f565b611bdf8784611ad8565b81526040611bef88828601611b4d565b85830152611c008860c08601611b4d565b81830152611c12886101408601611b4d565b60608301526101c084015183811115611c2a57600080fd5b80850194505087601f850112611c3f57600080fd5b83519250611c4f61146e84611401565b83815260069390931b84018501928581019089851115611c6e57600080fd5b948601945b84861015611c9457611c858a87611ad8565b82529482019490860190611c73565b60808401525090979650505050505050565b8060005b6002811015610f01578151845260209384019390910190600101611caa565b611cd4828251611ca6565b6020810151611ce66040840182611ca6565b505050565b60006101408286835b6008811015611d13578151835260209283019290910190600101611cf4565b505050806101008401526103208301611d39828501875180518252602090810151910152565b6020915081860151611d4f610180860182611cc9565b50604080870151611d64610200870182611cc9565b506060870151611d78610280870182611cc9565b5060808701516101e06103008701528051928390528301916000906103408701905b80831015611dcb57611db782865180518252602090810151910152565b938501936001929092019190830190611d9a565b50809550505050505082610120830152949350505050565b600060018201611df557611df561173f565b506001019056fea264697066735822122011c11a6d244661c961ebb212d6e1e8ac32012f5568b9305f6fbf51076150cfaa64736f6c63430008140033";

type MessageProcessorConstructorParams =
  | [linkLibraryAddresses: MessageProcessorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessageProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MessageProcessor__factory extends ContractFactory {
  constructor(...args: MessageProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MessageProcessor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MessageProcessorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ce9c2c925f157047e54fa833ec4e61409f\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT5.sol:PoseidonT5"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6574937f64fc1d7710ec0e28b7a36713bb\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$20527677031d76601747626a9845039fe4\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT6.sol:PoseidonT6"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dc01a9744591ab014bc46a3b7671cdaefb\\$__", "g"),
      linkLibraryAddresses["contracts/crypto/PoseidonT4.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _vkRegistry: AddressLike,
    _poll: AddressLike,
    _mode: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _vkRegistry,
      _poll,
      _mode,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _vkRegistry: AddressLike,
    _poll: AddressLike,
    _mode: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _vkRegistry,
      _poll,
      _mode,
      overrides || {}
    ) as Promise<
      MessageProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MessageProcessor__factory {
    return super.connect(runner) as MessageProcessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageProcessorInterface {
    return new Interface(_abi) as MessageProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MessageProcessor {
    return new Contract(address, _abi, runner) as unknown as MessageProcessor;
  }
}

export interface MessageProcessorLibraryAddresses {
  ["contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
