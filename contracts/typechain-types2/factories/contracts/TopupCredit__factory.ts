/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  TopupCredit,
  TopupCreditInterface,
} from "../../contracts/TopupCredit";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAXIMUM_AIRDROP_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "airdropTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x600b60808181526a151bdc1d5c10dc99591a5d60aa1b60a081905261010060405260c092835260e0523391600362000038838262000182565b50600462000047828262000182565b5050506001600160a01b0381166200007957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000084816200008b565b506200024e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010857607f821691505b6020821081036200012957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017d57600081815260208120601f850160051c81016020861015620001585750805b601f850160051c820191505b81811015620001795782815560010162000164565b5050505b505050565b81516001600160401b038111156200019e576200019e620000dd565b620001b681620001af8454620000f3565b846200012f565b602080601f831160018114620001ee5760008415620001d55750858301515b600019600386901b1c1916600185901b17855562000179565b600085815260208120601f198616915b828110156200021f57888601518255948401946001909101908401620001fe565b50858210156200023e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610af1806200025e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb146101fd578063aaae80fd14610210578063dd62ed3e14610223578063f2fde38b1461025c57600080fd5b8063715018a6146101bd5780638da5cb5b146101c757806395d89b41146101e257806397dc4a13146101ea57600080fd5b806323b872dd116100d357806323b872dd146101605780632e0f262514610173578063313ce5671461018d57806370a082311461019457600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323633cf214610158575b600080fd5b61010d61026f565b60405161011a9190610810565b60405180910390f35b61013661013136600461087a565b610301565b604051901515815260200161011a565b6002545b60405190815260200161011a565b61014a61031b565b61013661016e3660046108a4565b610337565b61017b600181565b60405160ff909116815260200161011a565b601261017b565b61014a6101a23660046108e0565b6001600160a01b031660009081526020819052604090205490565b6101c561035b565b005b6005546040516001600160a01b03909116815260200161011a565b61010d61036f565b6101c56101f8366004610902565b61037e565b61013661020b36600461087a565b6103ce565b6101c561021e36600461087a565b6103dc565b61014a61023136600461091b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101c561026a3660046108e0565b61042d565b60606003805461027e9061094e565b80601f01602080910402602001604051908101604052809291908181526020018280546102aa9061094e565b80156102f75780601f106102cc576101008083540402835291602001916102f7565b820191906000526020600020905b8154815290600101906020018083116102da57829003601f168201915b5050505050905090565b60003361030f81858561046d565b60019150505b92915050565b6103276001600a610a82565b61033490620186a0610a91565b81565b60003361034585828561047f565b6103508585856104fd565b506001949350505050565b61036361055c565b61036d6000610589565b565b60606004805461027e9061094e565b61038661055c565b6103926001600a610a82565b61039f90620186a0610a91565b81106103c1576040516001622863f960e21b0319815260040160405180910390fd5b6103cb33826105db565b50565b60003361030f8185856104fd565b6103e461055c565b6103f06001600a610a82565b6103fd90620186a0610a91565b811061041f576040516001622863f960e21b0319815260040160405180910390fd5b61042982826105db565b5050565b61043561055c565b6001600160a01b03811661046457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103cb81610589565b61047a8383836001610611565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104f757818110156104e857604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161045b565b6104f784848484036000610611565b50505050565b6001600160a01b03831661052757604051634b637e8f60e11b81526000600482015260240161045b565b6001600160a01b0382166105515760405163ec442f0560e01b81526000600482015260240161045b565b61047a8383836106e6565b6005546001600160a01b0316331461036d5760405163118cdaa760e01b815233600482015260240161045b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166106055760405163ec442f0560e01b81526000600482015260240161045b565b610429600083836106e6565b6001600160a01b03841661063b5760405163e602df0560e01b81526000600482015260240161045b565b6001600160a01b03831661066557604051634a1406b160e11b81526000600482015260240161045b565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104f757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106d891815260200190565b60405180910390a350505050565b6001600160a01b0383166107115780600260008282546107069190610aa8565b909155506107839050565b6001600160a01b038316600090815260208190526040902054818110156107645760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161045b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661079f576002805482900390556107be565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161080391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561083d57858101830151858201604001528201610821565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461087557600080fd5b919050565b6000806040838503121561088d57600080fd5b6108968361085e565b946020939093013593505050565b6000806000606084860312156108b957600080fd5b6108c28461085e565b92506108d06020850161085e565b9150604084013590509250925092565b6000602082840312156108f257600080fd5b6108fb8261085e565b9392505050565b60006020828403121561091457600080fd5b5035919050565b6000806040838503121561092e57600080fd5b6109378361085e565b91506109456020840161085e565b90509250929050565b600181811c9082168061096257607f821691505b60208210810361098257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156109d95781600019048211156109bf576109bf610988565b808516156109cc57918102915b93841c93908002906109a3565b509250929050565b6000826109f057506001610315565b816109fd57506000610315565b8160018114610a135760028114610a1d57610a39565b6001915050610315565b60ff841115610a2e57610a2e610988565b50506001821b610315565b5060208310610133831016604e8410600b8410161715610a5c575081810a610315565b610a66838361099e565b8060001904821115610a7a57610a7a610988565b029392505050565b60006108fb60ff8416836109e1565b808202811582820484141761031557610315610988565b808201808211156103155761031561098856fea26469706673582212205a33bbaaa7dcffc0f935f395c5738c85b356d2619144f509252a502aac1a6fd664736f6c63430008140033";

type TopupCreditConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TopupCreditConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TopupCredit__factory extends ContractFactory {
  constructor(...args: TopupCreditConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TopupCredit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TopupCredit__factory {
    return super.connect(runner) as TopupCredit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TopupCreditInterface {
    return new Interface(_abi) as TopupCreditInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TopupCredit {
    return new Contract(address, _abi, runner) as unknown as TopupCredit;
  }
}
